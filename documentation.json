{
    "pipes": [
        {
            "name": "NotificationMessagePipe",
            "id": "pipe-NotificationMessagePipe-bfa1ef4dd38cd0e2dfa51f3130b349f86c1179fe879c07e8ee297324bafba9f80dcfffe9ae7eb12a6c2e24269ff84ef2f8b1e016b898699a72cdaf857038162b",
            "file": "projects/insite-kit/src/lib/service/pipe/notification-message.pipe.ts",
            "type": "pipe",
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "properties": [],
            "methods": [
                {
                    "name": "determineMessage",
                    "args": [
                        {
                            "name": "type",
                            "type": "NotificationType",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "\"New User Request\" | \"Change to System Settings\" | \"New Request\"",
                    "typeParameters": [],
                    "line": 14,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "type",
                            "type": "NotificationType",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "transform",
                    "args": [
                        {
                            "name": "notification",
                            "type": "Notification",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "\"New User Request\" | \"Change to System Settings\" | \"New Request\"",
                    "typeParameters": [],
                    "line": 6,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "notification",
                            "type": "Notification",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "ngname": "formatNotitication",
            "sourceCode": "import { Pipe, PipeTransform } from '@angular/core';\r\nimport { Notification, NotificationType } from '../../model/notification.model';\r\n\r\n@Pipe({ name: 'formatNotitication' })\r\nexport class NotificationMessagePipe implements PipeTransform {\r\n  transform(notification: Notification) {\r\n    if (notification) {\r\n      return this.determineMessage(notification.body.bodyType);\r\n    } else {\r\n      return 'New Request';\r\n    }\r\n  }\r\n\r\n  determineMessage(type: NotificationType) {\r\n    if (type === NotificationType.USER) {\r\n      return 'New User Request';\r\n    } else if (type === NotificationType.SYSTEM_UPDATE) {\r\n      return 'Change to System Settings';\r\n    } else {\r\n      return 'New Request';\r\n    }\r\n  }\r\n}\r\n"
        },
        {
            "name": "UsernamePipe",
            "id": "pipe-UsernamePipe-775c0bba622d1694451f1ea5f1d087a6f517bca6c593b52bd26db5209beac0e4c2fd08685e5b7e2f24715c0ec95418132ce0c837cdf64ac72e798675aad144ed",
            "file": "projects/insite-kit/src/lib/service/pipe/format-user-name.pipe.ts",
            "type": "pipe",
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "properties": [],
            "methods": [
                {
                    "name": "transform",
                    "args": [
                        {
                            "name": "user",
                            "type": "User",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 6,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "user",
                            "type": "User",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "ngname": "formatUserName",
            "sourceCode": "import { Pipe, PipeTransform } from '@angular/core';\r\nimport { User } from '../../model/user.model';\r\n\r\n@Pipe({ name: 'formatUserName' })\r\nexport class UsernamePipe implements PipeTransform {\r\n  transform(user: User) {\r\n    if (user) {\r\n      if (user.lastName) {\r\n        return `${user.firstName} ${user.lastName}`;\r\n      } else {\r\n        return user.firstName;\r\n      }\r\n    } else {\r\n      return '-';\r\n    }\r\n  }\r\n}\r\n"
        }
    ],
    "interfaces": [
        {
            "name": "AuthToken",
            "id": "interface-AuthToken-c744925f4a2ecd8a2d57d840e754b5250d0c8ac3cd9fe2ca7ff252041214db2bb734b889fdc850b84672e393c603d7e911d35fb510160181c3a11ffca8bf5a69",
            "file": "projects/insite-kit/src/lib/model/auth-token.model.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { User } from './user.model';\r\n\r\nexport interface AuthToken {\r\n  token: string;\r\n  createDate: Date | string;\r\n  expireDate: Date | string;\r\n  user: User;\r\n}\r\n",
            "properties": [
                {
                    "name": "createDate",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Date | string",
                    "optional": false,
                    "description": "",
                    "line": 5
                },
                {
                    "name": "expireDate",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Date | string",
                    "optional": false,
                    "description": "",
                    "line": 6
                },
                {
                    "name": "token",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 4
                },
                {
                    "name": "user",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "User",
                    "optional": false,
                    "description": "",
                    "line": 7
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "GridColumn",
            "id": "interface-GridColumn-9d0df3e9c3102e7687d347e458b196323830fe17aea7138f3e7e8fce604fce27e1b9c7aa114683defc271afe43076c78996b11e92a1ede2be357e06b86d0af3a",
            "file": "projects/insite-kit/src/lib/model/grid.model.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { Observable } from 'rxjs';\r\n\r\nexport type GridDataObservable = Observable<any[]>;\r\n\r\nexport interface GridColumn {\r\n  label?: string;\r\n  field?: string;\r\n}\r\n",
            "properties": [
                {
                    "name": "field",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 7
                },
                {
                    "name": "label",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 6
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "Notification",
            "id": "interface-Notification-f04bd0daba5fb9e88287597ce37956d7964e8ba4f1d1c213187c7213d43c1889740db7ad59a825ef3c74043db4e8989c06bd865b602fc3f26d45ffcc08a90204",
            "file": "projects/insite-kit/src/lib/model/notification.model.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface Notification {\r\n  id?: number;\r\n  body?: NotificationBody;\r\n  userId?: number;\r\n  destination?: string;\r\n  action?: NotificationAction;\r\n  created?: string | Date;\r\n}\r\n\r\nexport interface NotificationBody {\r\n  bodyType: NotificationType;\r\n  [x: string]: any;\r\n}\r\n\r\nexport enum NotificationType {\r\n  USER = 'USER',\r\n  SYSTEM_UPDATE = 'SYSTEM_UPDATE',\r\n}\r\n\r\nexport enum NotificationAction {\r\n  CREATE = 'C',\r\n  READ = 'R',\r\n  UPDATE = 'U',\r\n  DELETE = 'D',\r\n}\r\n",
            "properties": [
                {
                    "name": "action",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "NotificationAction",
                    "optional": true,
                    "description": "",
                    "line": 6
                },
                {
                    "name": "body",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "NotificationBody",
                    "optional": true,
                    "description": "",
                    "line": 3
                },
                {
                    "name": "created",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string | Date",
                    "optional": true,
                    "description": "",
                    "line": 7
                },
                {
                    "name": "destination",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 5
                },
                {
                    "name": "id",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": true,
                    "description": "",
                    "line": 2
                },
                {
                    "name": "userId",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": true,
                    "description": "",
                    "line": 4
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "NotificationBody",
            "id": "interface-NotificationBody-f04bd0daba5fb9e88287597ce37956d7964e8ba4f1d1c213187c7213d43c1889740db7ad59a825ef3c74043db4e8989c06bd865b602fc3f26d45ffcc08a90204",
            "file": "projects/insite-kit/src/lib/model/notification.model.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface Notification {\r\n  id?: number;\r\n  body?: NotificationBody;\r\n  userId?: number;\r\n  destination?: string;\r\n  action?: NotificationAction;\r\n  created?: string | Date;\r\n}\r\n\r\nexport interface NotificationBody {\r\n  bodyType: NotificationType;\r\n  [x: string]: any;\r\n}\r\n\r\nexport enum NotificationType {\r\n  USER = 'USER',\r\n  SYSTEM_UPDATE = 'SYSTEM_UPDATE',\r\n}\r\n\r\nexport enum NotificationAction {\r\n  CREATE = 'C',\r\n  READ = 'R',\r\n  UPDATE = 'U',\r\n  DELETE = 'D',\r\n}\r\n",
            "properties": [
                {
                    "name": "bodyType",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "NotificationType",
                    "optional": false,
                    "description": "",
                    "line": 11
                }
            ],
            "indexSignatures": [
                {
                    "id": "index-declaration-f04bd0daba5fb9e88287597ce37956d7964e8ba4f1d1c213187c7213d43c1889740db7ad59a825ef3c74043db4e8989c06bd865b602fc3f26d45ffcc08a90204",
                    "args": [
                        {
                            "name": "x",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "returnType": "any",
                    "line": 11,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "kind": 175,
            "methods": []
        },
        {
            "name": "PasswordUpdate",
            "id": "interface-PasswordUpdate-c58e661530a36abce0179f4246d0d704d32f82c6472dce9a7d32fd4953f8b844707e12bc5d70e748567bbdb2a67e2d5bb3ffc5387de13449cdaa78354a300b3f",
            "file": "projects/insite-kit/src/lib/model/password-update.model.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface PasswordUpdate {\r\n  currentPassword?: string;\r\n  newPassword?: string;\r\n}\r\n",
            "properties": [
                {
                    "name": "currentPassword",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 2
                },
                {
                    "name": "newPassword",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 3
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "User",
            "id": "interface-User-754bfa3bc23e061d2dcbb9adcd381eaab1564d4fbea0ab5b96a0c7e5068b77f74efca36a99f82cd9c0f9d49dfdaa990a9f09aca263ca2ae88359ed58ec9e33de",
            "file": "projects/insite-kit/src/lib/model/user.model.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { WebRole } from './common.model';\r\n\r\nexport interface User {\r\n  id?: number;\r\n  firstName?: string;\r\n  lastName?: string;\r\n  email?: string;\r\n  webRole?: WebRole | any;\r\n  password?: string;\r\n  lastLoginDate?: Date;\r\n  insertDate?: Date;\r\n  [key: string]: any;\r\n}\r\n",
            "properties": [
                {
                    "name": "email",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 7
                },
                {
                    "name": "firstName",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 5
                },
                {
                    "name": "id",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": true,
                    "description": "",
                    "line": 4
                },
                {
                    "name": "insertDate",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Date",
                    "optional": true,
                    "description": "",
                    "line": 11
                },
                {
                    "name": "lastLoginDate",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Date",
                    "optional": true,
                    "description": "",
                    "line": 10
                },
                {
                    "name": "lastName",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 6
                },
                {
                    "name": "password",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 9
                },
                {
                    "name": "webRole",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "WebRole | any",
                    "optional": true,
                    "description": "",
                    "line": 8
                }
            ],
            "indexSignatures": [
                {
                    "id": "index-declaration-754bfa3bc23e061d2dcbb9adcd381eaab1564d4fbea0ab5b96a0c7e5068b77f74efca36a99f82cd9c0f9d49dfdaa990a9f09aca263ca2ae88359ed58ec9e33de",
                    "args": [
                        {
                            "name": "key",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "returnType": "any",
                    "line": 11,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "kind": 175,
            "methods": []
        },
        {
            "name": "WebNotification",
            "id": "interface-WebNotification-a50fbe93f6c34269d7278a4602d0e7fee509eabe28c8c69946b7785b25a1d696fac9ffc370ddff14790477b25473754b9fb7cadab6f5e3400de52b9689790e3a",
            "file": "projects/insite-kit/src/lib/model/web-notification.model.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface WebNotification {\r\n  id?: number;\r\n  title?: string;\r\n  message?: string;\r\n}\r\n",
            "properties": [
                {
                    "name": "id",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": true,
                    "description": "",
                    "line": 2
                },
                {
                    "name": "message",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 4
                },
                {
                    "name": "title",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 3
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        }
    ],
    "injectables": [
        {
            "name": "AuthService",
            "id": "injectable-AuthService-50b5a679fe9882869b3234cf745dafa74821e582fd45aa24c3bcadc1837394ec1ce3c24aa508c2f0b3437b3e0f00e77d9f8b4dd3e0c381fb4905cd029fc6c491",
            "file": "projects/insite-kit/src/lib/service/auth/auth.service.ts",
            "properties": [],
            "methods": [
                {
                    "name": "authenticate",
                    "args": [
                        {
                            "name": "email",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "password",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<AuthToken>",
                    "typeParameters": [],
                    "line": 21,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nAuthenticate a user and get a token for the user\n\n",
                    "description": "<p>Authenticate a user and get a token for the user</p>\n",
                    "jsdoctags": [
                        {
                            "name": "email",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": {
                                "pos": 550,
                                "end": 558,
                                "flags": 4227072,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "password"
                            },
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "pos": 544,
                                "end": 549,
                                "flags": 4227072,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "param"
                            },
                            "comment": "<p>associated to the user</p>\n"
                        },
                        {
                            "tagName": {
                                "pos": 589,
                                "end": 596,
                                "flags": 4227072,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "returns"
                            },
                            "comment": ""
                        }
                    ]
                },
                {
                    "name": "reauthenticate",
                    "args": [],
                    "optional": false,
                    "returnType": "Observable<AuthToken>",
                    "typeParameters": [],
                    "line": 32,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nRe-Authenticates a user. Only works if they have an existing token.\n\n",
                    "description": "<p>Re-Authenticates a user. Only works if they have an existing token.</p>\n",
                    "jsdoctags": [
                        {
                            "tagName": {
                                "pos": 919,
                                "end": 926,
                                "flags": 4227072,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "returns"
                            },
                            "comment": "<p>The new Auth Token object</p>\n"
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { tap } from 'rxjs/operators';\r\nimport { AuthToken } from '../../model/auth-token.model';\r\nimport { RequestService } from '../request/request.service';\r\nimport { JwtService } from './jwt.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class AuthService {\r\n  constructor(private request: RequestService, private jwt: JwtService) {}\r\n\r\n  /**\r\n   * Authenticate a user and get a token for the user\r\n   *\r\n   * @param username of the user\r\n   * @param password associated to the user\r\n   * @returns\r\n   */\r\n  authenticate(email: string, password: string): Observable<AuthToken> {\r\n    return this.request\r\n      .post<AuthToken>('authenticate', { email, password })\r\n      .pipe(tap((u) => this.jwt.setToken(u.token)));\r\n  }\r\n\r\n  /**\r\n   * Re-Authenticates a user. Only works if they have an existing token.\r\n   *\r\n   * @returns The new Auth Token object\r\n   */\r\n  reauthenticate(): Observable<AuthToken> {\r\n    return this.request\r\n      .post<AuthToken>('reauthenticate')\r\n      .pipe(tap((u) => this.jwt.setToken(u.token)));\r\n  }\r\n}\r\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "request",
                        "type": "RequestService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "jwt",
                        "type": "JwtService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 11,
                "jsdoctags": [
                    {
                        "name": "request",
                        "type": "RequestService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "jwt",
                        "type": "JwtService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "type": "injectable"
        },
        {
            "name": "CommonService",
            "id": "injectable-CommonService-268575ee7fd5557b9d327ceacda9c5b5ef575bbaf5977d4275138e7f9e3268445fbf3541e429b3a112ee45be762a940a8f449c9526fd244a29c4bf4fc65144de",
            "file": "projects/insite-kit/src/lib/service/common/common.service.ts",
            "properties": [],
            "methods": [
                {
                    "name": "copyObject",
                    "args": [
                        {
                            "name": "obj",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 13,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nWill return the copied object of it's own instance.\n\n",
                    "description": "<p>Will return the copied object of it&#39;s own instance.</p>\n",
                    "jsdoctags": [
                        {
                            "name": {
                                "pos": 202,
                                "end": 205,
                                "flags": 4227072,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "obj"
                            },
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "pos": 196,
                                "end": 201,
                                "flags": 4227072,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "param"
                            },
                            "comment": "<p>The object to be copied</p>\n"
                        },
                        {
                            "tagName": {
                                "pos": 237,
                                "end": 244,
                                "flags": 4227072,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "returns"
                            },
                            "comment": "<p>new object instance</p>\n"
                        }
                    ]
                },
                {
                    "name": "formatDate",
                    "args": [
                        {
                            "name": "value",
                            "type": "Date | string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "string",
                    "typeParameters": [],
                    "line": 23,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nFormats the given date object or string. The default format being used is month/day/year.\n\n",
                    "description": "<p>Formats the given date object or string. The default format being used is month/day/year.</p>\n",
                    "jsdoctags": [
                        {
                            "name": {
                                "pos": 477,
                                "end": 482,
                                "flags": 4227072,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "value"
                            },
                            "type": "Date | string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "pos": 471,
                                "end": 476,
                                "flags": 4227072,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "param"
                            },
                            "comment": "<p>The value to be formatted.</p>\n"
                        },
                        {
                            "tagName": {
                                "pos": 517,
                                "end": 524,
                                "flags": 4227072,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "returns"
                            },
                            "comment": "<p>The formatted string.</p>\n"
                        }
                    ]
                },
                {
                    "name": "getFormattedName",
                    "args": [
                        {
                            "name": "user",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "string",
                    "typeParameters": [],
                    "line": 53,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nFormats the users name into a first name and last name basis.\n\n",
                    "description": "<p>Formats the users name into a first name and last name basis.</p>\n",
                    "jsdoctags": [
                        {
                            "name": {
                                "pos": 1230,
                                "end": 1234,
                                "flags": 4227072,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "user"
                            },
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "pos": 1224,
                                "end": 1229,
                                "flags": 4227072,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "param"
                            },
                            "comment": "<p>The user object to be formatted.</p>\n"
                        },
                        {
                            "tagName": {
                                "pos": 1275,
                                "end": 1282,
                                "flags": 4227072,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "returns"
                            },
                            "comment": "<p>String of the formatted name.</p>\n"
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Injectable } from '@angular/core';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class CommonService {\r\n  /**\r\n   * Will return the copied object of it's own instance.\r\n   *\r\n   * @param obj The object to be copied\r\n   * @returns new object instance\r\n   */\r\n  copyObject(obj: any): any {\r\n    return JSON.parse(JSON.stringify(obj));\r\n  }\r\n\r\n  /**\r\n   * Formats the given date object or string. The default format being used is month/day/year.\r\n   *\r\n   * @param value The value to be formatted.\r\n   * @returns The formatted string.\r\n   */\r\n  formatDate(value: Date | string): string {\r\n    if (value === null) {\r\n      return '-';\r\n    }\r\n    let dateValue;\r\n    if (value instanceof Date) {\r\n      dateValue = value;\r\n    } else {\r\n      dateValue = new Date(value);\r\n    }\r\n\r\n    const month =\r\n      dateValue.getMonth() + 1 < 10\r\n        ? `0${dateValue.getMonth() + 1}`\r\n        : dateValue.getMonth() + 1;\r\n    const day =\r\n      dateValue.getDate() < 10\r\n        ? `0${dateValue.getDate()}`\r\n        : dateValue.getDate();\r\n    const year = dateValue.getFullYear();\r\n\r\n    return `${month}/${day}/${year}`;\r\n  }\r\n\r\n  /**\r\n   * Formats the users name into a first name and last name basis.\r\n   *\r\n   * @param user The user object to be formatted.\r\n   * @returns String of the formatted name.\r\n   */\r\n  getFormattedName(user: any): string {\r\n    if (user.lastName) {\r\n      return `${user.firstName} ${user.lastName}`.trim();\r\n    } else {\r\n      return `${user.firstName}`.trim();\r\n    }\r\n  }\r\n}\r\n",
            "type": "injectable"
        },
        {
            "name": "JwtService",
            "id": "injectable-JwtService-28589089ad1aa1b99a1188b9562560aa2a96bb6e593333c9d75066ded7328aee199d32f2763d7557b74d98238d9f6f1853e04e3da90b7d18c871864f73f28596",
            "file": "projects/insite-kit/src/lib/service/auth/jwt.service.ts",
            "properties": [],
            "methods": [
                {
                    "name": "get",
                    "args": [
                        {
                            "name": "value",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "tokenOverride",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 62,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nGets a property from the jwt token. If the property does not exist on\nthe token then it will return null.\n\n",
                    "description": "<p>Gets a property from the jwt token. If the property does not exist on\nthe token then it will return null.</p>\n",
                    "jsdoctags": [
                        {
                            "name": {
                                "pos": 1581,
                                "end": 1586,
                                "flags": 4227072,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "value"
                            },
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "pos": 1575,
                                "end": 1580,
                                "flags": 4227072,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "param"
                            },
                            "comment": "<p>The value to get from the jwt token.</p>\n"
                        },
                        {
                            "name": {
                                "pos": 1637,
                                "end": 1650,
                                "flags": 4227072,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "tokenOverride"
                            },
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "pos": 1631,
                                "end": 1636,
                                "flags": 4227072,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "param"
                            },
                            "comment": "<p>If the token override needs to be used over the stored value.</p>\n"
                        },
                        {
                            "tagName": {
                                "pos": 1720,
                                "end": 1727,
                                "flags": 4227072,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "returns"
                            },
                            "comment": "<p>The property on the jwt token.</p>\n"
                        }
                    ]
                },
                {
                    "name": "getToken",
                    "args": [],
                    "optional": false,
                    "returnType": "string",
                    "typeParameters": [],
                    "line": 23,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nGets the raw token that is currently stored for the logged in user.\n\n",
                    "description": "<p>Gets the raw token that is currently stored for the logged in user.</p>\n",
                    "jsdoctags": [
                        {
                            "tagName": {
                                "pos": 559,
                                "end": 566,
                                "flags": 4227072,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "returns"
                            },
                            "comment": "<p>String of the raw json web token.</p>\n"
                        }
                    ]
                },
                {
                    "name": "getUser",
                    "args": [],
                    "optional": false,
                    "returnType": "User",
                    "typeParameters": [],
                    "line": 85,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "getUserId",
                    "args": [],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 72,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nGets the user id from the jwt token.\n\n",
                    "description": "<p>Gets the user id from the jwt token.</p>\n",
                    "jsdoctags": [
                        {
                            "tagName": {
                                "pos": 2026,
                                "end": 2033,
                                "flags": 4227072,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "returns"
                            },
                            "comment": "<p>The user&#39;s id.</p>\n"
                        }
                    ]
                },
                {
                    "name": "getWebRole",
                    "args": [],
                    "optional": false,
                    "returnType": "string | number | symbol",
                    "typeParameters": [],
                    "line": 81,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nGets the user webrole from the jwt token.\n\n",
                    "description": "<p>Gets the user webrole from the jwt token.</p>\n",
                    "jsdoctags": [
                        {
                            "tagName": {
                                "pos": 2188,
                                "end": 2195,
                                "flags": 4227072,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "returns"
                            },
                            "comment": "<p>The user&#39;s webrole.</p>\n"
                        }
                    ]
                },
                {
                    "name": "isAuthenticated",
                    "args": [],
                    "optional": false,
                    "returnType": "boolean",
                    "typeParameters": [],
                    "line": 42,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nChecks to see if the logged in user is authenticated already. If the users\ntoken is expired then it will remove and route them to the login screen.\n\n",
                    "description": "<p>Checks to see if the logged in user is authenticated already. If the users\ntoken is expired then it will remove and route them to the login screen.</p>\n",
                    "jsdoctags": [
                        {
                            "tagName": {
                                "pos": 1101,
                                "end": 1108,
                                "flags": 4227072,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "returns"
                            },
                            "comment": "<p>Boolean if the user is authenticated or not.</p>\n"
                        }
                    ]
                },
                {
                    "name": "logOut",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 99,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nWill log a user out of the application and route them to the login\npage.\n",
                    "description": "<p>Will log a user out of the application and route them to the login\npage.</p>\n"
                },
                {
                    "name": "setToken",
                    "args": [
                        {
                            "name": "token",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 32,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nSets the users jwt token. Only called when the user is authenticated.\n\n",
                    "description": "<p>Sets the users jwt token. Only called when the user is authenticated.</p>\n",
                    "jsdoctags": [
                        {
                            "name": {
                                "pos": 787,
                                "end": 792,
                                "flags": 4227072,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "token"
                            },
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "pos": 781,
                                "end": 786,
                                "flags": 4227072,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "param"
                            },
                            "comment": "<p>The token to set in the local storage.</p>\n"
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Injectable } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { JwtHelperService } from '@auth0/angular-jwt';\r\nimport { WebRole } from '../../model/common.model';\r\nimport { User } from '../../model/user.model';\r\n\r\nexport const TOKEN_NAME = 'token';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class JwtService {\r\n  constructor(\r\n    private router: Router,\r\n    private readonly jwtHelperService: JwtHelperService\r\n  ) {}\r\n\r\n  /**\r\n   * Gets the raw token that is currently stored for the logged in user.\r\n   *\r\n   * @returns String of the raw json web token.\r\n   */\r\n  getToken(): string {\r\n    return localStorage.getItem(TOKEN_NAME);\r\n  }\r\n\r\n  /**\r\n   * Sets the users jwt token. Only called when the user is authenticated.\r\n   *\r\n   * @param token The token to set in the local storage.\r\n   */\r\n  setToken(token: string) {\r\n    localStorage.setItem(TOKEN_NAME, token);\r\n  }\r\n\r\n  /**\r\n   * Checks to see if the logged in user is authenticated already. If the users\r\n   * token is expired then it will remove and route them to the login screen.\r\n   *\r\n   * @returns Boolean if the user is authenticated or not.\r\n   */\r\n  isAuthenticated() {\r\n    if (localStorage.getItem(TOKEN_NAME) != null) {\r\n      if (this.jwtHelperService.isTokenExpired()) {\r\n        localStorage.removeItem(TOKEN_NAME);\r\n        return false;\r\n      }\r\n      return true;\r\n    } else {\r\n      return false;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Gets a property from the jwt token. If the property does not exist on\r\n   * the token then it will return null.\r\n   *\r\n   * @param value The value to get from the jwt token.\r\n   * @param tokenOverride If the token override needs to be used over the stored value.\r\n   * @returns The property on the jwt token.\r\n   */\r\n  get(value: any, tokenOverride?: string) {\r\n    const reviewedToken = tokenOverride ? tokenOverride : this.getToken();\r\n    return this.jwtHelperService.decodeToken(reviewedToken)[value];\r\n  }\r\n\r\n  /**\r\n   * Gets the user id from the jwt token.\r\n   *\r\n   * @returns The user's id.\r\n   */\r\n  getUserId() {\r\n    return Number(this.get('userId'));\r\n  }\r\n\r\n  /**\r\n   * Gets the user webrole from the jwt token.\r\n   *\r\n   * @returns The user's webrole.\r\n   */\r\n  getWebRole() {\r\n    return this.get('webRole') as keyof typeof WebRole;\r\n  }\r\n\r\n  getUser(): User {\r\n    return {\r\n      id: this.getUserId(),\r\n      firstName: this.get('firstName'),\r\n      lastName: this.get('lastName'),\r\n      email: this.get('email'),\r\n      webRole: this.getWebRole(),\r\n    };\r\n  }\r\n\r\n  /**\r\n   * Will log a user out of the application and route them to the login\r\n   * page.\r\n   */\r\n  logOut() {\r\n    localStorage.removeItem(TOKEN_NAME);\r\n    this.router.navigate(['login']);\r\n  }\r\n}\r\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "jwtHelperService",
                        "type": "JwtHelperService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 12,
                "jsdoctags": [
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "jwtHelperService",
                        "type": "JwtHelperService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "type": "injectable"
        },
        {
            "name": "NotificationService",
            "id": "injectable-NotificationService-09bb3462d1be7e2e54ca2c1c22159b0cd9c132e970ba44e2efdf6022a60ee326185317997d4041537c54055c033738787e4edabd72af307f2e4dbd25d3b81afd",
            "file": "projects/insite-kit/src/lib/service/subscription/notification/notification.service.ts",
            "properties": [
                {
                    "name": "BASE_PATH",
                    "defaultValue": "'api/notification-app/notifications'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 10,
                    "modifierKind": [
                        144
                    ]
                },
                {
                    "name": "notificationListener",
                    "defaultValue": "new Subject<any>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Subject<void>",
                    "optional": false,
                    "description": "",
                    "line": 11,
                    "modifierKind": [
                        121
                    ]
                }
            ],
            "methods": [
                {
                    "name": "deleteNotification",
                    "args": [
                        {
                            "name": "id",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<any>",
                    "typeParameters": [],
                    "line": 53,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nThis will delete the notification for the given id.\n\n",
                    "description": "<p>This will delete the notification for the given id.</p>\n",
                    "jsdoctags": [
                        {
                            "name": {
                                "pos": 1589,
                                "end": 1591,
                                "flags": 4227072,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "id"
                            },
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "pos": 1583,
                                "end": 1588,
                                "flags": 4227072,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "param"
                            },
                            "comment": "<p>The notification id that needs deleted.</p>\n"
                        },
                        {
                            "tagName": {
                                "pos": 1639,
                                "end": 1646,
                                "flags": 4227072,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "returns"
                            },
                            "comment": "<p>Any object that is has completed.</p>\n"
                        }
                    ]
                },
                {
                    "name": "getNotificationById",
                    "args": [
                        {
                            "name": "id",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<Notification>",
                    "typeParameters": [],
                    "line": 31,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nThis will get the notification for the given id.\n\n",
                    "description": "<p>This will get the notification for the given id.</p>\n",
                    "jsdoctags": [
                        {
                            "name": {
                                "pos": 917,
                                "end": 919,
                                "flags": 4227072,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "id"
                            },
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "pos": 911,
                                "end": 916,
                                "flags": 4227072,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "param"
                            },
                            "comment": "<p>The id of the notificaiton to get.</p>\n"
                        },
                        {
                            "tagName": {
                                "pos": 962,
                                "end": 969,
                                "flags": 4227072,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "returns"
                            },
                            "comment": "<p>Notification observable</p>\n"
                        }
                    ]
                },
                {
                    "name": "getNotifications",
                    "args": [
                        {
                            "name": "params",
                            "type": "Map<string | string[]>",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<Notification[]>",
                    "typeParameters": [],
                    "line": 21,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nGet a list of notifications for the given request\n\n",
                    "description": "<p>Get a list of notifications for the given request</p>\n",
                    "jsdoctags": [
                        {
                            "name": {
                                "pos": 585,
                                "end": 591,
                                "flags": 4227072,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "params"
                            },
                            "type": "Map<string | string[]>",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "pos": 579,
                                "end": 584,
                                "flags": 4227072,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "param"
                            },
                            "comment": "<p>to filter request on</p>\n"
                        },
                        {
                            "tagName": {
                                "pos": 620,
                                "end": 627,
                                "flags": 4227072,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "returns"
                            },
                            "comment": "<p>observable of the returned request</p>\n"
                        }
                    ]
                },
                {
                    "name": "markNotificationRead",
                    "args": [
                        {
                            "name": "id",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<Notification>",
                    "typeParameters": [],
                    "line": 41,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nThis will mark the notification as read for the given id.\n\n",
                    "description": "<p>This will mark the notification as read for the given id.</p>\n",
                    "jsdoctags": [
                        {
                            "name": {
                                "pos": 1239,
                                "end": 1241,
                                "flags": 4227072,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "id"
                            },
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "pos": 1233,
                                "end": 1238,
                                "flags": 4227072,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "param"
                            },
                            "comment": "<p>The id of the notitificaiton to read.</p>\n"
                        },
                        {
                            "tagName": {
                                "pos": 1287,
                                "end": 1294,
                                "flags": 4227072,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "returns"
                            },
                            "comment": "<p>Notification object that was read.</p>\n"
                        }
                    ]
                },
                {
                    "name": "notificationChange",
                    "args": [],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 62,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nWatch for changes to the notifications trigger.\n\n",
                    "description": "<p>Watch for changes to the notifications trigger.</p>\n",
                    "jsdoctags": [
                        {
                            "tagName": {
                                "pos": 1894,
                                "end": 1901,
                                "flags": 4227072,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "returns"
                            },
                            "comment": "<p>observeable with the change detected.</p>\n"
                        }
                    ]
                },
                {
                    "name": "triggerNotificationUpdate",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 69,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nTrigger an update for the notifications in the navbar\n",
                    "description": "<p>Trigger an update for the notifications in the navbar</p>\n"
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Injectable } from '@angular/core';\r\nimport { Observable, Subject } from 'rxjs';\r\nimport { Notification } from '../../../model/notification.model';\r\nimport { RequestService } from '../../request/request.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class NotificationService {\r\n  readonly BASE_PATH = 'api/notification-app/notifications';\r\n  private notificationListener: Subject<void> = new Subject<any>();\r\n\r\n  constructor(private readonly requestService: RequestService) {}\r\n\r\n  /**\r\n   * Get a list of notifications for the given request\r\n   *\r\n   * @param params to filter request on\r\n   * @returns observable of the returned request\r\n   */\r\n  getNotifications(params?: Map<string, string[]>): Observable<Notification[]> {\r\n    return this.requestService.get<Notification[]>(this.BASE_PATH, params);\r\n  }\r\n\r\n  /**\r\n   * This will get the notification for the given id.\r\n   *\r\n   * @param id The id of the notificaiton to get.\r\n   * @returns Notification observable\r\n   */\r\n  getNotificationById(id: number): Observable<Notification> {\r\n    return this.requestService.get<Notification>(`${this.BASE_PATH}/${id}`);\r\n  }\r\n\r\n  /**\r\n   * This will mark the notification as read for the given id.\r\n   *\r\n   * @param id The id of the notitificaiton to read.\r\n   * @returns Notification object that was read.\r\n   */\r\n  markNotificationRead(id: number): Observable<Notification> {\r\n    return this.requestService.put<Notification>(\r\n      `${this.BASE_PATH}/${id}/read`\r\n    );\r\n  }\r\n\r\n  /**\r\n   * This will delete the notification for the given id.\r\n   *\r\n   * @param id The notification id that needs deleted.\r\n   * @returns Any object that is has completed.\r\n   */\r\n  deleteNotification(id: number): Observable<any> {\r\n    return this.requestService.delete<any>(`${this.BASE_PATH}/${id}`);\r\n  }\r\n\r\n  /**\r\n   * Watch for changes to the notifications trigger.\r\n   *\r\n   * @returns observeable with the change detected.\r\n   */\r\n  notificationChange() {\r\n    return this.notificationListener.asObservable();\r\n  }\r\n\r\n  /**\r\n   * Trigger an update for the notifications in the navbar\r\n   */\r\n  triggerNotificationUpdate() {\r\n    this.notificationListener.next();\r\n  }\r\n}\r\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "requestService",
                        "type": "RequestService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 11,
                "jsdoctags": [
                    {
                        "name": "requestService",
                        "type": "RequestService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "type": "injectable"
        },
        {
            "name": "PopupService",
            "id": "injectable-PopupService-7bfdbf49ff31c81184ea438f73192446df1c26ea878e78d412756c6fe6ba0dbdcb0a480707194bdbde97a0f2f160c69b60e2e2eec4203309d80d84f7f4d0c84a",
            "file": "projects/insite-kit/src/lib/service/subscription/notification/popup.service.ts",
            "properties": [
                {
                    "name": "container",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ComponentRef<NotificationMessageComponent>",
                    "optional": false,
                    "description": "",
                    "line": 16,
                    "modifierKind": [
                        121
                    ]
                }
            ],
            "methods": [
                {
                    "name": "overlayContainer",
                    "args": [
                        {
                            "name": "viewContainerRef",
                            "type": "ViewContainerRef",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 24,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nSets the overlay container the notification component instance will\nbe attached too.\n\n",
                    "description": "<p>Sets the overlay container the notification component instance will\nbe attached too.</p>\n",
                    "jsdoctags": [
                        {
                            "name": {
                                "pos": 761,
                                "end": 777,
                                "flags": 4227072,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "viewContainerRef"
                            },
                            "type": "ViewContainerRef",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "pos": 755,
                                "end": 760,
                                "flags": 4227072,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "param"
                            },
                            "comment": "<p>Where the notification should be displayed at.</p>\n"
                        }
                    ]
                },
                {
                    "name": "show",
                    "args": [
                        {
                            "name": "notification",
                            "type": "Notification",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 35,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nShows the given notification in the container.\n\n",
                    "description": "<p>Shows the given notification in the container.</p>\n",
                    "jsdoctags": [
                        {
                            "name": {
                                "pos": 1076,
                                "end": 1088,
                                "flags": 4227072,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "notification"
                            },
                            "type": "Notification",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "pos": 1070,
                                "end": 1075,
                                "flags": 4227072,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "param"
                            },
                            "comment": "<p>The notification to display.</p>\n"
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "<p>Service for showing notifications in the application. It will add the component to\nthe specified container that is passed in. By default this will be the navbar.</p>\n",
            "rawdescription": "\n\nService for showing notifications in the application. It will add the component to\nthe specified container that is passed in. By default this will be the navbar.\n\n",
            "sourceCode": "import { ComponentRef, Injectable, ViewContainerRef } from '@angular/core';\r\nimport { NotificationMessageComponent } from '../../../component/notification-message/notification-message.component';\r\nimport { Notification } from '../../../model/notification.model';\r\n\r\n/**\r\n * Service for showing notifications in the application. It will add the component to\r\n * the specified container that is passed in. By default this will be the navbar.\r\n *\r\n * @author Sam Butler\r\n * @since August 11, 2022\r\n */\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class PopupService {\r\n  private container: ComponentRef<NotificationMessageComponent>;\r\n\r\n  /**\r\n   * Sets the overlay container the notification component instance will\r\n   * be attached too.\r\n   *\r\n   * @param viewContainerRef Where the notification should be displayed at.\r\n   */\r\n  overlayContainer(viewContainerRef: ViewContainerRef) {\r\n    this.container = viewContainerRef.createComponent(\r\n      NotificationMessageComponent\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Shows the given notification in the container.\r\n   *\r\n   * @param notification The notification to display.\r\n   */\r\n  show(notification: Notification) {\r\n    this.container.instance.addNotification(notification);\r\n  }\r\n}\r\n",
            "type": "injectable"
        },
        {
            "name": "RequestService",
            "id": "injectable-RequestService-0aae104f48835d439c5177e44ae319e84a0cbe349387a5360a2a9d389f6cfad6cfcab377e3999b0d24acf64c6cb4944a47249becd3521f65a9be824d3c1ac38e",
            "file": "projects/insite-kit/src/lib/service/request/request.service.ts",
            "properties": [],
            "methods": [
                {
                    "name": "delete",
                    "args": [
                        {
                            "name": "url",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<T>",
                    "typeParameters": [
                        "T"
                    ],
                    "line": 69,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nDelete the given data for the url.\n\n",
                    "description": "<p>Delete the given data for the url.</p>\n",
                    "jsdoctags": [
                        {
                            "name": {
                                "pos": 1833,
                                "end": 1836,
                                "flags": 4227072,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "url"
                            },
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "pos": 1827,
                                "end": 1832,
                                "flags": 4227072,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "param"
                            },
                            "comment": "<p>The url to delete from.</p>\n"
                        },
                        {
                            "tagName": {
                                "pos": 1868,
                                "end": 1875,
                                "flags": 4227072,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "returns"
                            },
                            "comment": "<p>observable of the passed in object</p>\n"
                        }
                    ]
                },
                {
                    "name": "download",
                    "args": [
                        {
                            "name": "url",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "params",
                            "type": "Map<string | string[]>",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<Blob>",
                    "typeParameters": [],
                    "line": 81,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nGets the download body as a blob on the given endpoint.\n\n",
                    "description": "<p>Gets the download body as a blob on the given endpoint.</p>\n",
                    "jsdoctags": [
                        {
                            "name": {
                                "pos": 2160,
                                "end": 2163,
                                "flags": 4227072,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "url"
                            },
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "pos": 2154,
                                "end": 2159,
                                "flags": 4227072,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "param"
                            },
                            "comment": "<p>to call.</p>\n"
                        },
                        {
                            "name": {
                                "pos": 2186,
                                "end": 2192,
                                "flags": 4227072,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "params"
                            },
                            "type": "Map<string | string[]>",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "pos": 2180,
                                "end": 2185,
                                "flags": 4227072,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "param"
                            },
                            "comment": "<p>params to add to endpoint.</p>\n"
                        },
                        {
                            "tagName": {
                                "pos": 2227,
                                "end": 2234,
                                "flags": 4227072,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "returns"
                            },
                            "comment": "<p>Blob donwload of the passed in object.</p>\n"
                        }
                    ]
                },
                {
                    "name": "get",
                    "args": [
                        {
                            "name": "url",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "params",
                            "type": "Map<string | string[]>",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<T>",
                    "typeParameters": [
                        "T"
                    ],
                    "line": 29,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nGet request service that will add the given parameters provided\nand call the given url.\n\n",
                    "description": "<p>Get request service that will add the given parameters provided\nand call the given url.</p>\n",
                    "jsdoctags": [
                        {
                            "name": {
                                "pos": 590,
                                "end": 593,
                                "flags": 4227072,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "url"
                            },
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "pos": 584,
                                "end": 589,
                                "flags": 4227072,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "param"
                            },
                            "comment": "<p>to call</p>\n"
                        },
                        {
                            "name": {
                                "pos": 615,
                                "end": 621,
                                "flags": 4227072,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "params"
                            },
                            "type": "Map<string | string[]>",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "pos": 609,
                                "end": 614,
                                "flags": 4227072,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "param"
                            },
                            "comment": "<p>params to add to endpoint</p>\n"
                        },
                        {
                            "tagName": {
                                "pos": 655,
                                "end": 662,
                                "flags": 4227072,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "returns"
                            },
                            "comment": "<p>observable of the passed in object</p>\n"
                        }
                    ]
                },
                {
                    "name": "post",
                    "args": [
                        {
                            "name": "url",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "body",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<T>",
                    "typeParameters": [
                        "T"
                    ],
                    "line": 46,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nPost the given body to the passed in endpoint\n\n",
                    "description": "<p>Post the given body to the passed in endpoint</p>\n",
                    "jsdoctags": [
                        {
                            "name": {
                                "pos": 1105,
                                "end": 1108,
                                "flags": 4227072,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "url"
                            },
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "pos": 1099,
                                "end": 1104,
                                "flags": 4227072,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "param"
                            },
                            "comment": "<p>to post body too</p>\n"
                        },
                        {
                            "name": {
                                "pos": 1139,
                                "end": 1143,
                                "flags": 4227072,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "body"
                            },
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "pos": 1133,
                                "end": 1138,
                                "flags": 4227072,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "param"
                            },
                            "comment": "<p>to be posted to the endpoint</p>\n"
                        },
                        {
                            "tagName": {
                                "pos": 1180,
                                "end": 1187,
                                "flags": 4227072,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "returns"
                            },
                            "comment": "<p>observable of the passed in object</p>\n"
                        }
                    ]
                },
                {
                    "name": "put",
                    "args": [
                        {
                            "name": "url",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "body",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<T>",
                    "typeParameters": [
                        "T"
                    ],
                    "line": 58,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nPut the given body to the passed in endpoint\n\n",
                    "description": "<p>Put the given body to the passed in endpoint</p>\n",
                    "jsdoctags": [
                        {
                            "name": {
                                "pos": 1475,
                                "end": 1478,
                                "flags": 4227072,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "url"
                            },
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "pos": 1469,
                                "end": 1474,
                                "flags": 4227072,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "param"
                            },
                            "comment": "<p>to post body too</p>\n"
                        },
                        {
                            "name": {
                                "pos": 1509,
                                "end": 1513,
                                "flags": 4227072,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "body"
                            },
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "pos": 1503,
                                "end": 1508,
                                "flags": 4227072,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "param"
                            },
                            "comment": "<p>to be posted to the endpoint</p>\n"
                        },
                        {
                            "tagName": {
                                "pos": 1550,
                                "end": 1557,
                                "flags": 4227072,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "returns"
                            },
                            "comment": "<p>observable of the passed in object</p>\n"
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "<p>Common Request Service</p>\n",
            "rawdescription": "\n\nCommon Request Service\n\n",
            "sourceCode": "import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { UrlService } from '../url-service/url.service';\r\n\r\n/**\r\n * Common Request Service\r\n *\r\n * @author Sam Butler\r\n * @since Dec 15, 2020\r\n */\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class RequestService {\r\n  constructor(\r\n    private readonly urlService: UrlService,\r\n    private readonly http: HttpClient\r\n  ) {}\r\n\r\n  /**\r\n   * Get request service that will add the given parameters provided\r\n   * and call the given url.\r\n   *\r\n   * @param url to call\r\n   * @param params params to add to endpoint\r\n   * @returns observable of the passed in object\r\n   */\r\n  get<T>(url: string, params?: Map<string, string[]>): Observable<T> {\r\n    let endpoint = `${this.urlService.getAPIUrl()}/${url}?`;\r\n    if (params) {\r\n      params.forEach((value, key) => {\r\n        endpoint = `${endpoint}${key}=${value}&`;\r\n      });\r\n    }\r\n    return this.http.get<T>(endpoint.slice(0, -1));\r\n  }\r\n\r\n  /**\r\n   * Post the given body to the passed in endpoint\r\n   *\r\n   * @param url to post body too\r\n   * @param body to be posted to the endpoint\r\n   * @returns observable of the passed in object\r\n   */\r\n  post<T>(url: string, body?: any): Observable<T> {\r\n    let endpoint = `${this.urlService.getAPIUrl()}/${url}`;\r\n    return this.http.post<T>(endpoint, body);\r\n  }\r\n\r\n  /**\r\n   * Put the given body to the passed in endpoint\r\n   *\r\n   * @param url to post body too\r\n   * @param body to be posted to the endpoint\r\n   * @returns observable of the passed in object\r\n   */\r\n  put<T>(url: string, body?: any): Observable<T> {\r\n    let endpoint = `${this.urlService.getAPIUrl()}/${url}`;\r\n    return this.http.put<T>(endpoint, body);\r\n  }\r\n\r\n  /**\r\n   * Delete the given data for the url.\r\n   *\r\n   * @param url The url to delete from.\r\n   * @returns observable of the passed in object\r\n   */\r\n  delete<T>(url: string): Observable<T> {\r\n    let endpoint = `${this.urlService.getAPIUrl()}/${url}`;\r\n    return this.http.delete<T>(endpoint);\r\n  }\r\n\r\n  /**\r\n   * Gets the download body as a blob on the given endpoint.\r\n   *\r\n   * @param url to call.\r\n   * @param params params to add to endpoint.\r\n   * @returns Blob donwload of the passed in object.\r\n   */\r\n  download(url: string, params?: Map<string, string[]>): Observable<Blob> {\r\n    let endpoint = `${this.urlService.getAPIUrl()}/${url}?`;\r\n    if (params) {\r\n      params.forEach((value, key) => {\r\n        endpoint = `${endpoint}${key}=${value}&`;\r\n      });\r\n    }\r\n    return this.http.get(endpoint.slice(0, -1), {\r\n      responseType: 'blob',\r\n    });\r\n  }\r\n}\r\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "urlService",
                        "type": "UrlService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "http",
                        "type": "HttpClient",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 15,
                "jsdoctags": [
                    {
                        "name": "urlService",
                        "type": "UrlService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "http",
                        "type": "HttpClient",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "type": "injectable"
        },
        {
            "name": "SubscriptionService",
            "id": "injectable-SubscriptionService-285689e4fdc07f01996d45094a45e4a462e64c216d700d88027cf8e235dd5b78abbb26ac0b50d453aeb75be790e3c7a65792adbe3264805a661f21dfd95d74c4",
            "file": "projects/insite-kit/src/lib/service/subscription/subscription.service.ts",
            "properties": [
                {
                    "name": "SOCKET_URL",
                    "defaultValue": "'/topic/notification'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 22,
                    "modifierKind": [
                        121,
                        144
                    ]
                }
            ],
            "methods": [
                {
                    "name": "init",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 34,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nInitialize the socket connection.\n",
                    "description": "<p>Initialize the socket connection.</p>\n"
                },
                {
                    "name": "listen",
                    "args": [
                        {
                            "name": "destination",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<Notification>",
                    "typeParameters": [],
                    "line": 51,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nThis will listen to the websocket url for any request and show it to the\nprovided user.\n\n",
                    "description": "<p>This will listen to the websocket url for any request and show it to the\nprovided user.</p>\n",
                    "jsdoctags": [
                        {
                            "name": {
                                "pos": 1303,
                                "end": 1314,
                                "flags": 4227072,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "destination"
                            },
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "pos": 1297,
                                "end": 1302,
                                "flags": 4227072,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "param"
                            },
                            "comment": "<p>What socket path to listen too.</p>\n"
                        },
                        {
                            "tagName": {
                                "pos": 1354,
                                "end": 1361,
                                "flags": 4227072,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "returns"
                            },
                            "comment": "<p>Observable of the caught Notification object.</p>\n"
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "<p>Subscription service for listening to a socket and processing\nthe notification that is passed in.</p>\n",
            "rawdescription": "\n\nSubscription service for listening to a socket and processing\nthe notification that is passed in.\n\n",
            "sourceCode": "import { Injectable } from '@angular/core';\r\nimport { RxStomp } from '@stomp/rx-stomp';\r\nimport { Message } from '@stomp/stompjs';\r\nimport { Observable } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\nimport { Notification } from '../../model/notification.model';\r\nimport { JwtService } from '../auth/jwt.service';\r\nimport { UrlService } from '../url-service/url.service';\r\nimport { STOMP_SOCKET_CONFIG } from './stomp.config';\r\n\r\n/**\r\n * Subscription service for listening to a socket and processing\r\n * the notification that is passed in.\r\n *\r\n * @author Sam Butler\r\n * @since August 11, 2022\r\n */\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class SubscriptionService extends RxStomp {\r\n  private readonly SOCKET_URL = '/topic/notification';\r\n\r\n  constructor(\r\n    private readonly jwt: JwtService,\r\n    private readonly urlService: UrlService\r\n  ) {\r\n    super();\r\n  }\r\n\r\n  /**\r\n   * Initialize the socket connection.\r\n   */\r\n  init() {\r\n    if (!this.active) {\r\n      this.configure(STOMP_SOCKET_CONFIG);\r\n      this.configure({\r\n        brokerURL: `${this.urlService.getSocketAPIUrl()}?${this.jwt.getToken()}`,\r\n      });\r\n      this.activate();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * This will listen to the websocket url for any request and show it to the\r\n   * provided user.\r\n   *\r\n   * @param destination What socket path to listen too.\r\n   * @returns Observable of the caught Notification object.\r\n   */\r\n  listen(destination?: string): Observable<Notification> {\r\n    return super\r\n      .watch(`${destination ? destination : this.SOCKET_URL}`)\r\n      .pipe(map((res: Message) => JSON.parse(res.body)));\r\n  }\r\n}\r\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "jwt",
                        "type": "JwtService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "urlService",
                        "type": "UrlService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 22,
                "jsdoctags": [
                    {
                        "name": "jwt",
                        "type": "JwtService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "urlService",
                        "type": "UrlService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "extends": "RxStomp",
            "type": "injectable"
        },
        {
            "name": "UrlService",
            "id": "injectable-UrlService-99f6d90e863cd3c0998882a7a605b3a89bb67cae2b94dc45e76d85d0da3b7a94ebbcef4418c3c0de85ae882f38c8a0134b37a5503632353645d8e663a09c96d0",
            "file": "projects/insite-kit/src/lib/service/url-service/url.service.ts",
            "properties": [],
            "methods": [
                {
                    "name": "getAPIUrl",
                    "args": [],
                    "optional": false,
                    "returnType": "string",
                    "typeParameters": [],
                    "line": 20,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nGet's the full API URL\n\n",
                    "description": "<p>Get&#39;s the full API URL</p>\n",
                    "jsdoctags": [
                        {
                            "tagName": {
                                "pos": 297,
                                "end": 304,
                                "flags": 4227072,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "returns"
                            },
                            "comment": "<p>string of the full API url</p>\n"
                        }
                    ]
                },
                {
                    "name": "getSocketAPIUrl",
                    "args": [],
                    "optional": false,
                    "returnType": "string",
                    "typeParameters": [],
                    "line": 33,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nGets the API for socket calls\n\n",
                    "description": "<p>Gets the API for socket calls</p>\n",
                    "jsdoctags": [
                        {
                            "tagName": {
                                "pos": 564,
                                "end": 571,
                                "flags": 4227072,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "returns"
                            },
                            "comment": "<p>The url for the api web socket.</p>\n"
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "<p>URL Service</p>\n",
            "rawdescription": "\n\nURL Service\n\n",
            "sourceCode": "import { Inject, Injectable } from '@angular/core';\r\n\r\n/**\r\n * URL Service\r\n *\r\n * @author Sam Butler\r\n * @since Dec 15, 2020\r\n */\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class UrlService {\r\n  constructor(@Inject('env') private env) {}\r\n\r\n  /**\r\n   * Get's the full API URL\r\n   *\r\n   * @returns string of the full API url\r\n   */\r\n  getAPIUrl(): string {\r\n    if (this.env.isLocal) {\r\n      return `http://${this.env.apiUrl}`;\r\n    } else {\r\n      return `https://${this.env.apiUrl}`;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Gets the API for socket calls\r\n   *\r\n   * @returns The url for the api web socket.\r\n   */\r\n  getSocketAPIUrl() {\r\n    if (this.env.isLocal) {\r\n      return `ws://${this.env.apiUrl}/api/subscription`;\r\n    } else {\r\n      return `wss://${this.env.apiUrl}/api/subscription`;\r\n    }\r\n  }\r\n}\r\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "env",
                        "type": "",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 12,
                "jsdoctags": [
                    {
                        "name": "env",
                        "type": "",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "type": "injectable"
        }
    ],
    "guards": [
        {
            "name": "AuthGuard",
            "id": "injectable-AuthGuard-26ad6f96e65222be14fa0eb0878dcbb187475060f6017084c4eaae4b8ee1d47e453f18509874e9bf6b85f21aa1ab41ec8947c90fe90c78a8d0e14cb52aea7622",
            "file": "projects/insite-kit/src/lib/service/auth/auth.guard.ts",
            "properties": [],
            "methods": [
                {
                    "name": "canActivate",
                    "args": [
                        {
                            "name": "next",
                            "type": "ActivatedRouteSnapshot",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "boolean",
                    "typeParameters": [],
                    "line": 18,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nDetermine if the current user JWT token is valid. If the token is invalid or expired\nthen it will return false, otherwise true.\n\n",
                    "description": "<p>Determine if the current user JWT token is valid. If the token is invalid or expired\nthen it will return false, otherwise true.</p>\n",
                    "jsdoctags": [
                        {
                            "name": {
                                "pos": 497,
                                "end": 501,
                                "flags": 4227072,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "next"
                            },
                            "type": "ActivatedRouteSnapshot",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "pos": 491,
                                "end": 496,
                                "flags": 4227072,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "param"
                            },
                            "comment": "<p>snapshot of the active route</p>\n"
                        },
                        {
                            "tagName": {
                                "pos": 538,
                                "end": 545,
                                "flags": 4227072,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "returns"
                            },
                            "comment": "<p>boolean based on the status of the token</p>\n"
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Injectable } from '@angular/core';\r\nimport { ActivatedRouteSnapshot, CanActivate, Router } from '@angular/router';\r\nimport { JwtService } from './jwt.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class AuthGuard implements CanActivate {\r\n  constructor(private router: Router, private jwt: JwtService) {}\r\n\r\n  /**\r\n   * Determine if the current user JWT token is valid. If the token is invalid or expired\r\n   * then it will return false, otherwise true.\r\n   *\r\n   * @param next snapshot of the active route\r\n   * @returns boolean based on the status of the token\r\n   */\r\n  canActivate(next: ActivatedRouteSnapshot): boolean {\r\n    if (!this.jwt.isAuthenticated()) {\r\n      if (next.routeConfig.path !== 'login') {\r\n        this.router.navigate(['/login']);\r\n        return false;\r\n      }\r\n    } else if (next.routeConfig.path === 'login') {\r\n      this.router.navigate(['/home']);\r\n      return false;\r\n    }\r\n    return true;\r\n  }\r\n}\r\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "jwt",
                        "type": "JwtService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 8,
                "jsdoctags": [
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "jwt",
                        "type": "JwtService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "type": "guard"
        }
    ],
    "interceptors": [
        {
            "name": "BasicHttpInterceptorService",
            "id": "injectable-BasicHttpInterceptorService-b545d631ead1b22631ed3d308b3ba75ad6f537f60621abd7dac4501f1142ffc05e32965a4f8bcc828097f85ea5a426aadfb62203531a4717d58ace0356101831",
            "file": "projects/insite-kit/src/lib/service/interceptor/http-interceptor.service.ts",
            "properties": [],
            "methods": [
                {
                    "name": "intercept",
                    "args": [
                        {
                            "name": "req",
                            "type": "HttpRequest<any>",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "next",
                            "type": "HttpHandler",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 12,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "req",
                            "type": "HttpRequest<any>",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "next",
                            "type": "HttpHandler",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import {\r\n  HttpHandler,\r\n  HttpInterceptor,\r\n  HttpRequest,\r\n} from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class BasicHttpInterceptorService implements HttpInterceptor {\r\n  constructor() {}\r\n  intercept(req: HttpRequest<any>, next: HttpHandler) {\r\n    if (localStorage.getItem('token')) {\r\n      req = req.clone({\r\n        setHeaders: {\r\n          Authorization: `Bearer: ${localStorage.getItem('token')}`,\r\n        },\r\n      });\r\n    }\r\n    return next.handle(req);\r\n  }\r\n}\r\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 10
            },
            "type": "interceptor"
        }
    ],
    "classes": [
        {
            "name": "AbstractTestBed",
            "id": "class-AbstractTestBed-7d1606fdf1108f16df435353041ae54f9735d06c4c405001a785db922114565b313491f63e83aa8265435f3e40b345e4b5ff4d6c98298ce470cb975dee77ba91",
            "file": "projects/insite-kit/src/lib/test/abstract-test-bed.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "class",
            "sourceCode": "import { TestBed, TestModuleMetadata } from '@angular/core/testing';\r\nimport { Routes } from '@angular/router';\r\nimport { RouterTestingModule } from '@angular/router/testing';\r\n\r\nexport abstract class AbstractTestBed {\r\n  static getModuleMetaData(): TestModuleMetadata {\r\n    return null;\r\n  }\r\n\r\n  static async setup(\r\n    updateModuleMetaData?: (moduleMetaData: TestModuleMetadata) => void\r\n  ): Promise<any> {\r\n    const moduleMetaData = this.getModuleMetaData();\r\n\r\n    if (updateModuleMetaData) {\r\n      updateModuleMetaData(moduleMetaData);\r\n    }\r\n\r\n    TestBed.configureTestingModule(moduleMetaData);\r\n  }\r\n\r\n  static useProvider(moduleMetaData: TestModuleMetadata, provider: any) {\r\n    const index = moduleMetaData.providers.findIndex(\r\n      (p) => p.provide === provider || p.provide === provider.provide\r\n    );\r\n    if (index >= 0) {\r\n      moduleMetaData.providers.splice(index, 1);\r\n    }\r\n    moduleMetaData.providers.push(provider);\r\n  }\r\n\r\n  static withRoutes(moduleMetaData: TestModuleMetadata, routes: Routes): void {\r\n    moduleMetaData.imports = moduleMetaData.imports.filter(\r\n      (i) => i !== RouterTestingModule\r\n    );\r\n    moduleMetaData.imports.push(RouterTestingModule.withRoutes(routes));\r\n  }\r\n}\r\n",
            "properties": [],
            "methods": [
                {
                    "name": "getModuleMetaData",
                    "args": [],
                    "optional": false,
                    "returnType": "TestModuleMetadata",
                    "typeParameters": [],
                    "line": 6,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        124
                    ]
                },
                {
                    "name": "setup",
                    "args": [
                        {
                            "name": "updateModuleMetaData",
                            "type": "function",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "function": [
                                {
                                    "name": "moduleMetaData",
                                    "type": "TestModuleMetadata",
                                    "deprecated": false,
                                    "deprecationMessage": ""
                                }
                            ]
                        }
                    ],
                    "optional": false,
                    "returnType": "Promise<any>",
                    "typeParameters": [],
                    "line": 10,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        124,
                        131
                    ],
                    "jsdoctags": [
                        {
                            "name": "updateModuleMetaData",
                            "type": "function",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "function": [
                                {
                                    "name": "moduleMetaData",
                                    "type": "TestModuleMetadata",
                                    "deprecated": false,
                                    "deprecationMessage": ""
                                }
                            ],
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "useProvider",
                    "args": [
                        {
                            "name": "moduleMetaData",
                            "type": "TestModuleMetadata",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "provider",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 22,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        124
                    ],
                    "jsdoctags": [
                        {
                            "name": "moduleMetaData",
                            "type": "TestModuleMetadata",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "provider",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "withRoutes",
                    "args": [
                        {
                            "name": "moduleMetaData",
                            "type": "TestModuleMetadata",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "routes",
                            "type": "Routes",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 32,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        124
                    ],
                    "jsdoctags": [
                        {
                            "name": "moduleMetaData",
                            "type": "TestModuleMetadata",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "routes",
                            "type": "Routes",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "indexSignatures": [],
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": []
        },
        {
            "name": "InsiteDataObject",
            "id": "class-InsiteDataObject-6234780119cc6b9699ac45f2ab74b5581f35f599d060869df403b37e7c366bf35fe61cd97dc6878973972174756db27556deddfde2575a21140c1aa1539f631a",
            "file": "projects/insite-kit/src/lib/test/test-data.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "class",
            "sourceCode": "class InsiteDataObject {\r\n  getToken(): string {\r\n    return 'eyJhbGciOiJIUzUxMiJ9.eyJ3ZWJSb2xlIjoiVVNFUiIsImZpcnN0TmFtZSI6IlRlc3QiLCJsYXN0TmFtZSI6IlVzZXIiLCJwYXNzd29yZFJlc2V0IjpmYWxzZSwiZW52IjoiTE9DQUwiLCJleHAiOjE2NTk1NjM5NDEsInVzZXJJZCI6NiwiaWF0IjoxNjU5NTQ1OTQxLCJlbWFpbCI6InRlc3RAdXNlci5jb20ifQ.LpzHXld-0KnFeZckcE3iFO8dk49kQMmZkXaY75GhcW3hbIsvy5-fwtfFHoCQGfoRfo7WatLGp15nWLi64c2vEA';\r\n  }\r\n}\r\n\r\nexport const InisteTestData = new InsiteDataObject();\r\n",
            "properties": [],
            "methods": [
                {
                    "name": "getToken",
                    "args": [],
                    "optional": false,
                    "returnType": "string",
                    "typeParameters": [],
                    "line": 2,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "indexSignatures": [],
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": []
        },
        {
            "name": "InsiteTestBed",
            "id": "class-InsiteTestBed-2943f6364f7a3861ccf3b482803b4b21b174c2404011ce4de98b5d2855bc4f54eb0ae40de3610d9ad55a0205d1a7cbd7980518ef5a41704c5a73203466e24278",
            "file": "projects/insite-kit/src/lib/test/insite-test-bed.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "class",
            "sourceCode": "import { TestModuleMetadata } from '@angular/core/testing';\r\nimport { InsiteKitModule } from '../insite-kit.module';\r\nimport { AbstractTestBed } from './abstract-test-bed';\r\nimport { environment } from './lib-test-env';\r\n\r\nexport class InsiteTestBed extends AbstractTestBed {\r\n  static override getModuleMetaData(): TestModuleMetadata {\r\n    return {\r\n      imports: [InsiteKitModule.forRoot(environment)],\r\n    };\r\n  }\r\n}\r\n",
            "properties": [],
            "methods": [
                {
                    "name": "getModuleMetaData",
                    "args": [],
                    "optional": false,
                    "returnType": "TestModuleMetadata",
                    "typeParameters": [],
                    "line": 7,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        124,
                        158
                    ],
                    "inheritance": {
                        "file": "AbstractTestBed"
                    }
                },
                {
                    "name": "setup",
                    "args": [
                        {
                            "name": "updateModuleMetaData",
                            "type": "function",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "function": [
                                {
                                    "name": "moduleMetaData",
                                    "type": "TestModuleMetadata",
                                    "deprecated": false,
                                    "deprecationMessage": ""
                                }
                            ]
                        }
                    ],
                    "optional": false,
                    "returnType": "Promise<any>",
                    "typeParameters": [],
                    "line": 10,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        124,
                        131
                    ],
                    "jsdoctags": [
                        {
                            "name": "updateModuleMetaData",
                            "type": "function",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "function": [
                                {
                                    "name": "moduleMetaData",
                                    "type": "TestModuleMetadata",
                                    "deprecated": false,
                                    "deprecationMessage": ""
                                }
                            ],
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "AbstractTestBed"
                    }
                },
                {
                    "name": "useProvider",
                    "args": [
                        {
                            "name": "moduleMetaData",
                            "type": "TestModuleMetadata",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "provider",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 22,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        124
                    ],
                    "jsdoctags": [
                        {
                            "name": "moduleMetaData",
                            "type": "TestModuleMetadata",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "provider",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "AbstractTestBed"
                    }
                },
                {
                    "name": "withRoutes",
                    "args": [
                        {
                            "name": "moduleMetaData",
                            "type": "TestModuleMetadata",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "routes",
                            "type": "Routes",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 32,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        124
                    ],
                    "jsdoctags": [
                        {
                            "name": "moduleMetaData",
                            "type": "TestModuleMetadata",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "routes",
                            "type": "Routes",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "AbstractTestBed"
                    }
                }
            ],
            "indexSignatures": [],
            "extends": "AbstractTestBed",
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": []
        }
    ],
    "directives": [],
    "components": [
        {
            "name": "BannerComponent",
            "id": "component-BannerComponent-032724722e8cc3e82deb86f78aa88e8a69cf1f458b0e5d282c6efcd4c88c8f7683416e4d06f0611a0749836cbbbf8353fb53df72a4992f02c0e73e5bd3372c95",
            "file": "projects/insite-kit/src/lib/component/banner/banner.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "ik-banner",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "banner.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "type",
                    "defaultValue": "'warning'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 8,
                    "type": "\"info\" | \"danger\" | \"warning\"",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'ik-banner',\r\n  templateUrl: 'banner.component.html',\r\n})\r\nexport class BannerComponent {\r\n  @Input() type: 'info' | 'danger' | 'warning' = 'warning';\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "templateData": "<div class=\"ik-banner\" [ngClass]=\"type\">\r\n  <ik-icon class=\"banner-icon\" icon=\"warning\"></ik-icon>\r\n  <div class=\"banner-content\" [ngClass]=\"type\">\r\n    <ng-content></ng-content>\r\n  </div>\r\n</div>\r\n"
        },
        {
            "name": "BaseNavbarComponent",
            "id": "component-BaseNavbarComponent-41f178a5488333652bec0f9a6801e8f6c37091fa194e36ae66d276ee21e9cdb82421851a354ae1ea6f7b644e9a6fada1d811729426a5d5f239bf58c0638eaf38",
            "file": "projects/insite-kit/src/lib/component/navbar/base-navbar/base-navbar.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "ik-base-navbar",
            "styleUrls": [],
            "styles": [],
            "template": "",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "Access",
                    "defaultValue": "Access",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 31
                },
                {
                    "name": "destroy",
                    "defaultValue": "new Subject<void>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 28
                },
                {
                    "name": "Feature",
                    "defaultValue": "Feature",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 30
                },
                {
                    "name": "notificationAccess",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 32
                },
                {
                    "name": "notificationCount",
                    "defaultValue": "0",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 27
                },
                {
                    "name": "sideBar",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "SidebarComponent",
                    "optional": false,
                    "description": "",
                    "line": 25,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "'sideBarNav'"
                        }
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "getNotifications",
                    "args": [
                        {
                            "name": "params",
                            "type": "Map<string | string[]>",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<Notification[]>",
                    "typeParameters": [],
                    "line": 55,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "params",
                            "type": "Map<string | string[]>",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "getParams",
                    "args": [],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 79,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "listenToWebSocket",
                    "args": [],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 69,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnDestroy",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 51,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 45,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "notificationUpdates",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 59,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import {\r\n  Component,\r\n  Inject,\r\n  OnDestroy,\r\n  OnInit,\r\n  ViewChild,\r\n  ViewContainerRef,\r\n} from '@angular/core';\r\nimport { Router } from '@angular/router';\r\n\r\nimport { Observable, Subject } from 'rxjs';\r\nimport { switchMap, takeUntil, tap } from 'rxjs/operators';\r\nimport { Access, Feature, WebRole } from '../../../model/common.model';\r\nimport { Notification } from '../../../model/notification.model';\r\nimport { JwtService } from '../../../service/auth/jwt.service';\r\nimport { NotificationService } from '../../../service/subscription/notification/notification.service';\r\nimport { PopupService } from '../../../service/subscription/notification/popup.service';\r\nimport { SubscriptionService } from '../../../service/subscription/subscription.service';\r\nimport { SidebarComponent } from '../../sidebar/sidebar.component';\r\n@Component({\r\n  selector: 'ik-base-navbar',\r\n  template: '',\r\n})\r\nexport class BaseNavbarComponent implements OnInit, OnDestroy {\r\n  @ViewChild('sideBarNav') sideBar: SidebarComponent;\r\n\r\n  notificationCount = 0;\r\n  destroy = new Subject<void>();\r\n\r\n  Feature = Feature;\r\n  Access = Access;\r\n  notificationAccess: boolean;\r\n\r\n  constructor(\r\n    protected readonly router: Router,\r\n    protected readonly notificationService: NotificationService,\r\n    protected readonly jwt: JwtService,\r\n    protected readonly subscriptionService: SubscriptionService,\r\n    protected readonly popupService: PopupService,\r\n    @Inject(ViewContainerRef) viewContainerRef\r\n  ) {\r\n    popupService.overlayContainer(viewContainerRef);\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.subscriptionService.init();\r\n    this.notificationUpdates();\r\n    this.listenToWebSocket();\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.destroy.next();\r\n  }\r\n\r\n  getNotifications(params?: Map<string, string[]>): Observable<Notification[]> {\r\n    return this.notificationService.getNotifications(params);\r\n  }\r\n\r\n  notificationUpdates() {\r\n    this.notificationService\r\n      .notificationChange()\r\n      .pipe(\r\n        switchMap(() => this.getNotifications(this.getParams())),\r\n        takeUntil(this.destroy)\r\n      )\r\n      .subscribe((res) => (this.notificationCount = res.length));\r\n  }\r\n\r\n  listenToWebSocket() {\r\n    return this.subscriptionService\r\n      .listen()\r\n      .pipe(\r\n        tap((res) => this.popupService.show(res)),\r\n        takeUntil(this.destroy)\r\n      )\r\n      .subscribe();\r\n  }\r\n\r\n  getParams() {\r\n    const currentUserRole = WebRole[this.jwt.get('webRole')];\r\n\r\n    if (Number(currentUserRole) >= WebRole.ADMIN.valueOf()) {\r\n      return new Map().set('read', false);\r\n    } else {\r\n      return new Map()\r\n        .set('receiverId', this.jwt.get('userId'))\r\n        .set('read', false);\r\n    }\r\n  }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "notificationService",
                        "type": "NotificationService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "jwt",
                        "type": "JwtService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "subscriptionService",
                        "type": "SubscriptionService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "popupService",
                        "type": "PopupService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "viewContainerRef",
                        "type": "",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 32,
                "jsdoctags": [
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "notificationService",
                        "type": "NotificationService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "jwt",
                        "type": "JwtService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "subscriptionService",
                        "type": "SubscriptionService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "popupService",
                        "type": "PopupService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "viewContainerRef",
                        "type": "",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit",
                "OnDestroy"
            ]
        },
        {
            "name": "CardComponent",
            "id": "component-CardComponent-1095d751633a91da6b9893b538c568e61dcdb40bf75ad7642f15d1b0938fc900ff2e9f723e3445edcbe6fbf4b5a3eb7e4990eb8bc0ecfe7c1ed4ff5f0b7f4b40",
            "file": "projects/insite-kit/src/lib/component/card/card.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "ik-card",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "card.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "marginBottom",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 9,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "padding",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 8,
                    "type": "boolean",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'ik-card',\r\n  templateUrl: 'card.component.html',\r\n})\r\nexport class CardComponent {\r\n  @Input() padding = true;\r\n  @Input() marginBottom = true;\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "templateData": "<div\r\n  class=\"card border-none\"\r\n  [ngClass]=\"{\r\n    'padding-card': padding,\r\n    'margin-card__bottom': marginBottom\r\n  }\"\r\n>\r\n  <ng-content></ng-content>\r\n</div>\r\n"
        },
        {
            "name": "CardHeaderComponent",
            "id": "component-CardHeaderComponent-c48badb23d1211897c14a630eadf066c3593dd49a0130efc0bdc657ad8bcd9b1b92b8076ebabf701beb3fd52bfb660424e4d50cacbf2c21038d027ef7e910265",
            "file": "projects/insite-kit/src/lib/component/card/card-header/card-header.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "ik-card-header",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "card-header.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "title",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 8,
                    "type": "string",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'ik-card-header',\r\n  templateUrl: 'card-header.component.html',\r\n})\r\nexport class CardHeaderComponent {\r\n  @Input() title: string;\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "templateData": "<div *ngIf=\"title\" class=\"header\">\r\n  <div class=\"title\">{{ title }}</div>\r\n  <ng-content></ng-content>\r\n</div>\r\n"
        },
        {
            "name": "CardInfoComponent",
            "id": "component-CardInfoComponent-f73c78699dd855d02b7373c45b5ef9ba1b926fe3451167e6730d8cc5f5f522d5b00ac915570e28a7a068d2846bbbbbccbc0ed03420d632773f5ffb61e70d8dda",
            "file": "projects/insite-kit/src/lib/component/card/card-info/card-info.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "ik-card-info",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "card-info.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "contentColor",
                    "defaultValue": "'DEFAULT'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 10,
                    "type": "\"DEFAULT\" | \"DENIED\" | \"APPROVED\" | \"PENDING\"",
                    "decorators": []
                },
                {
                    "name": "header",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 8,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "padding",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 12,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "text",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 9,
                    "type": "string",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'ik-card-info',\r\n  templateUrl: 'card-info.component.html',\r\n})\r\nexport class CardInfoComponent {\r\n  @Input() header: string;\r\n  @Input() text: string;\r\n  @Input() contentColor: 'DEFAULT' | 'DENIED' | 'APPROVED' | 'PENDING' =\r\n    'DEFAULT';\r\n  @Input() padding = true;\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "templateData": "<div class=\"content\" [ngClass]=\"{ 'padding-info': padding }\">\r\n  <div class=\"label-header\">{{ header }}</div>\r\n  <div [ngClass]=\"'DENIED'\" class=\"label-text\">{{ text }}</div>\r\n  <ng-content></ng-content>\r\n</div>\r\n"
        },
        {
            "name": "CheckboxComponent",
            "id": "component-CheckboxComponent-cfa1cc29b2f2190a9e319e700f1168c6b8b2d076ed36fcd61e22bc75e7f34bb296bb6a51d8063bc2e6127305ed675d1a05d44719f3909f11fd189259f8df40cc",
            "file": "projects/insite-kit/src/lib/component/checkbox/checkbox.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "ik-checkbox",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "checkbox.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "checked",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 9,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "checkId",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 8,
                    "type": "string",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "checkboxChange",
                    "defaultValue": "new EventEmitter<boolean>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 11,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "valueChange",
                    "args": [
                        {
                            "name": "event",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 13,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, EventEmitter, Input, Output } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'ik-checkbox',\r\n  templateUrl: 'checkbox.component.html',\r\n})\r\nexport class CheckboxComponent {\r\n  @Input() checkId: string;\r\n  @Input() checked = false;\r\n\r\n  @Output() checkboxChange = new EventEmitter<boolean>();\r\n\r\n  valueChange(event: any) {\r\n    this.checkboxChange.emit(event.target.checked);\r\n  }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "templateData": "<div class=\"form-group form-check\">\r\n  <input\r\n    type=\"checkbox\"\r\n    class=\"form-check-input ik-checkbox-default\"\r\n    (change)=\"valueChange($event)\"\r\n    [checked]=\"checked\"\r\n    [id]=\"checkId\"\r\n  />\r\n</div>\r\n"
        },
        {
            "name": "ContactAdminModalComponent",
            "id": "component-ContactAdminModalComponent-e19b5cf587511bbdcc846a63ef4a943df65d9076a0db447c990f69a12aac541b5287c598778cbbb7035aaf3d51160cfd9a0ce2af9648c527d7c1102e81f9fff0",
            "file": "projects/insite-kit/src/lib/component/footer/modals/contact-admin-modal/contact-admin-modal.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "ik-contact-admin-modal",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "contact-admin-modal.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "form",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "FormGroup",
                    "optional": false,
                    "description": "",
                    "line": 13
                },
                {
                    "name": "loading",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 14
                },
                {
                    "name": "modal",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ModalComponent",
                    "optional": false,
                    "description": "",
                    "line": 11,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "'contactAdminModal'"
                        }
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "buildForm",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 25,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 21,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "reset",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 31,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { ModalComponent } from '../../../modal/modal.component';\r\n\r\n@Component({\r\n  selector: 'ik-contact-admin-modal',\r\n  templateUrl: 'contact-admin-modal.component.html',\r\n})\r\nexport class ContactAdminModalComponent implements OnInit {\r\n  @ViewChild('contactAdminModal') modal: ModalComponent;\r\n\r\n  form: FormGroup;\r\n  loading = false;\r\n\r\n  constructor(\r\n    private readonly fb: FormBuilder,\r\n    private readonly toastService: ToastrService\r\n  ) {}\r\n\r\n  ngOnInit() {\r\n    this.buildForm();\r\n  }\r\n\r\n  buildForm() {\r\n    this.form = this.fb.group({\r\n      message: ['', Validators.required],\r\n    });\r\n  }\r\n\r\n  reset() {\r\n    this.modal.close();\r\n    this.loading = false;\r\n    this.form.patchValue({ message: '' });\r\n  }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "fb",
                        "type": "FormBuilder",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "toastService",
                        "type": "ToastrService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 14,
                "jsdoctags": [
                    {
                        "name": "fb",
                        "type": "FormBuilder",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "toastService",
                        "type": "ToastrService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<ik-modal #contactAdminModal name=\"contactAdminModal\">\r\n  <ik-modal-header title=\"Contact Us\"></ik-modal-header>\r\n  <ng-container *ngIf=\"!loading; else loader\">\r\n    <ik-modal-body>\r\n      <form [formGroup]=\"form\">\r\n        <div class=\"row\">\r\n          <div class=\"col-8\">\r\n            <div class=\"label-header\">Recipient</div>\r\n            <input\r\n              type=\"input\"\r\n              readonly\r\n              class=\"form-input__shadow type-input-margin-top noClick\"\r\n              placeholder=\"Samuel Butler (Admin)\"\r\n            />\r\n          </div>\r\n        </div>\r\n        <div class=\"row\">\r\n          <div class=\"col-xs-12 col-sm-12\">\r\n            <div class=\"label-header spacer-margin\">Message</div>\r\n            <textarea\r\n              formControlName=\"message\"\r\n              rows=\"4\"\r\n              cols=\"50\"\r\n              class=\"form-input__shadow textarea-margin\"\r\n            ></textarea>\r\n          </div>\r\n        </div>\r\n      </form>\r\n    </ik-modal-body>\r\n    <ik-modal-action-bar>\r\n      <button\r\n        class=\"btn btn-flat btn-primary btn-right btn-modal\"\r\n        [disabled]=\"this.form.invalid\"\r\n      >\r\n        Send\r\n      </button>\r\n      <button\r\n        class=\"btn btn-flat btn-default btn-right btn-modal\"\r\n        (click)=\"contactAdminModal.close()\"\r\n      >\r\n        Close\r\n      </button>\r\n    </ik-modal-action-bar>\r\n  </ng-container>\r\n</ik-modal>\r\n\r\n<ng-template #loader>\r\n  <ik-loading></ik-loading>\r\n</ng-template>\r\n"
        },
        {
            "name": "FooterComponent",
            "id": "component-FooterComponent-63498d622ff41a970900fca1c3b06d49f59d6d0cb984c56ede3c234c9f5cc870c814b1d99064ad30f0da7996af331a6c5c1baab814fa16a4d750f7b893d60a19",
            "file": "projects/insite-kit/src/lib/component/footer/footer.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "ik-footer",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "footer.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'ik-footer',\r\n  templateUrl: 'footer.component.html',\r\n})\r\nexport class FooterComponent {}\r\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "templateData": "<footer>\r\n  <div class=\"copyright\">Powered by Heroku | © Copyright 2020-2022</div>\r\n  <div class=\"row\">\r\n    <div class=\"content-link col-4\" (click)=\"contact.modal.open()\">\r\n      Contact Us\r\n    </div>\r\n    <div class=\"content-link col-4\" (click)=\"project.modal.open()\">Project</div>\r\n    <div class=\"content-link col-4\" (click)=\"privacy.modal.open()\">\r\n      Privacy Policy\r\n    </div>\r\n  </div>\r\n</footer>\r\n\r\n<ik-contact-admin-modal #contact></ik-contact-admin-modal>\r\n<ik-project-modal #project></ik-project-modal>\r\n<ik-privacy-policy-modal #privacy></ik-privacy-policy-modal>\r\n"
        },
        {
            "name": "GridColumnComponent",
            "id": "component-GridColumnComponent-7ef7145dbda62c69ed22bbcf8810dfe71216cc5826d964f79740728026f621a10710f985deddc54f4de870fbacb72bff9503ebfa18ec1e4d4c537183753d0562",
            "file": "projects/insite-kit/src/lib/component/grid/grid-column/grid-column.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "ik-grid-column",
            "styleUrls": [],
            "styles": [],
            "template": "",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "field",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 9,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "label",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 8,
                    "type": "string",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'ik-grid-column',\r\n  template: '',\r\n})\r\nexport class GridColumnComponent {\r\n  @Input() label: string;\r\n  @Input() field: string;\r\n\r\n  constructor() {}\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 9
            }
        },
        {
            "name": "GridComponent",
            "id": "component-GridComponent-0f614cbf6d5751dc9ec3bda3e88a0b2f22e619fa0eb5707d4e8e07ffd5eb9ae4a410b8f5ef22f13770e467f095042ffe65749e677da4dc4429bc2e5ad1be714e",
            "file": "projects/insite-kit/src/lib/component/grid/grid.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "ik-grid",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "grid.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "alwaysDestroy",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 39,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "basePath",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 36,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "dataLoader",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 32,
                    "type": "any[]",
                    "decorators": []
                },
                {
                    "name": "overflowEnabled",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 37,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "padding",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 35,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "pageSize",
                    "defaultValue": "15",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 34,
                    "type": "number",
                    "decorators": []
                },
                {
                    "name": "storageTag",
                    "defaultValue": "'gridCurrentPage'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 38,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "translationKey",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 33,
                    "type": "any",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "rowClick",
                    "defaultValue": "new EventEmitter<any>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 41,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [
                {
                    "name": "columns",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "QueryList<GridColumnComponent>",
                    "optional": false,
                    "description": "",
                    "line": 27,
                    "decorators": [
                        {
                            "name": "ContentChildren",
                            "stringifiedArguments": "GridColumnComponent"
                        }
                    ]
                },
                {
                    "name": "destroy",
                    "defaultValue": "new Subject<void>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 47
                },
                {
                    "name": "gridContent",
                    "defaultValue": "[[]]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[]",
                    "optional": false,
                    "description": "",
                    "line": 43
                },
                {
                    "name": "gridIndex",
                    "defaultValue": "0",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 44
                },
                {
                    "name": "initialLoadComplete",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 48
                },
                {
                    "name": "loading",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 46
                },
                {
                    "name": "pager",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "GridPagerComponent",
                    "optional": false,
                    "description": "",
                    "line": 28,
                    "decorators": [
                        {
                            "name": "ContentChild",
                            "stringifiedArguments": "GridPagerComponent"
                        }
                    ]
                },
                {
                    "name": "search",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "GridSearchComponent",
                    "optional": false,
                    "description": "",
                    "line": 30,
                    "decorators": [
                        {
                            "name": "ContentChild",
                            "stringifiedArguments": "GridSearchComponent"
                        }
                    ]
                },
                {
                    "name": "showAll",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "GridShowAllComponent",
                    "optional": false,
                    "description": "",
                    "line": 29,
                    "decorators": [
                        {
                            "name": "ContentChild",
                            "stringifiedArguments": "GridShowAllComponent"
                        }
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "checkDataLoader",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 67,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "getPageData",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 137,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "getRowData",
                    "args": [
                        {
                            "name": "index",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "{}",
                    "typeParameters": [],
                    "line": 149,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "index",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "initGrid",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 82,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "isDate",
                    "args": [
                        {
                            "name": "value",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "boolean",
                    "typeParameters": [],
                    "line": 158,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "value",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "isNewAppRoute",
                    "args": [],
                    "optional": false,
                    "returnType": "boolean",
                    "typeParameters": [],
                    "line": 167,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "listenToRoute",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 117,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngAfterViewInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 55,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnChanges",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 61,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnDestroy",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 75,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "onGridChange",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 126,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "onRowClick",
                    "args": [
                        {
                            "name": "event",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 131,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "refresh",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 113,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import {\r\n  AfterViewInit,\r\n  ChangeDetectorRef,\r\n  Component,\r\n  ContentChild,\r\n  ContentChildren,\r\n  EventEmitter,\r\n  Input,\r\n  OnChanges,\r\n  OnDestroy,\r\n  Output,\r\n  QueryList,\r\n} from '@angular/core';\r\nimport { NavigationEnd, Router } from '@angular/router';\r\nimport { Subject } from 'rxjs';\r\nimport { filter, takeUntil } from 'rxjs/operators';\r\nimport { GridColumnComponent } from './grid-column/grid-column.component';\r\nimport { GridPagerComponent } from './grid-pager/grid-pager.component';\r\nimport { GridSearchComponent } from './grid-search/grid-search.component';\r\nimport { GridShowAllComponent } from './grid-show-all/grid-show-all.component';\r\n\r\n@Component({\r\n  selector: 'ik-grid',\r\n  templateUrl: 'grid.component.html',\r\n})\r\nexport class GridComponent implements OnChanges, OnDestroy, AfterViewInit {\r\n  @ContentChildren(GridColumnComponent) columns: QueryList<GridColumnComponent>;\r\n  @ContentChild(GridPagerComponent) pager: GridPagerComponent;\r\n  @ContentChild(GridShowAllComponent) showAll: GridShowAllComponent;\r\n  @ContentChild(GridSearchComponent) search: GridSearchComponent;\r\n\r\n  @Input() dataLoader: any[] = [];\r\n  @Input() translationKey: any;\r\n  @Input() pageSize = 15;\r\n  @Input() padding = true;\r\n  @Input() basePath = '';\r\n  @Input() overflowEnabled = false;\r\n  @Input() storageTag = 'gridCurrentPage';\r\n  @Input() alwaysDestroy = false;\r\n\r\n  @Output() rowClick = new EventEmitter<any>();\r\n\r\n  gridContent = [[]];\r\n  gridIndex = 0;\r\n\r\n  loading = true;\r\n  destroy = new Subject<void>();\r\n  initialLoadComplete = false;\r\n\r\n  constructor(\r\n    private readonly router: Router,\r\n    private changeDector: ChangeDetectorRef\r\n  ) {}\r\n\r\n  ngAfterViewInit() {\r\n    this.checkDataLoader();\r\n    this.changeDector.detectChanges();\r\n    this.initialLoadComplete = true;\r\n  }\r\n\r\n  ngOnChanges() {\r\n    if (this.initialLoadComplete) {\r\n      this.checkDataLoader();\r\n    }\r\n  }\r\n\r\n  checkDataLoader() {\r\n    if (this.dataLoader) {\r\n      this.initGrid();\r\n    } else {\r\n      this.loading = true;\r\n    }\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    if (this.isNewAppRoute() || this.alwaysDestroy) {\r\n      localStorage.removeItem(this.storageTag);\r\n    }\r\n    this.destroy.next();\r\n  }\r\n\r\n  initGrid() {\r\n    this.gridIndex = Number(localStorage.getItem(this.storageTag)) | 0;\r\n    this.loading = false;\r\n\r\n    if (this.pager) {\r\n      this.pager.initPager(\r\n        this.dataLoader.length,\r\n        this.gridIndex,\r\n        this.pageSize,\r\n        this.translationKey,\r\n        this.storageTag\r\n      );\r\n    } else {\r\n      this.gridIndex = 0;\r\n    }\r\n\r\n    if (this.showAll) {\r\n      this.showAll.init(this.dataLoader.length);\r\n    }\r\n\r\n    if (this.search) {\r\n      this.search.search.pipe(takeUntil(this.destroy)).subscribe(() => {\r\n        this.loading = true;\r\n        this.pager.updateRoute(0);\r\n      });\r\n    }\r\n\r\n    this.getPageData();\r\n    this.listenToRoute();\r\n  }\r\n\r\n  refresh() {\r\n    this.loading = true;\r\n  }\r\n\r\n  listenToRoute() {\r\n    this.router.events\r\n      .pipe(\r\n        filter((e) => e instanceof NavigationEnd),\r\n        takeUntil(this.destroy)\r\n      )\r\n      .subscribe(() => this.onGridChange());\r\n  }\r\n\r\n  onGridChange() {\r\n    this.gridIndex = Number(localStorage.getItem(this.storageTag));\r\n    this.getPageData();\r\n  }\r\n\r\n  onRowClick(event: number) {\r\n    this.rowClick.emit(\r\n      this.dataLoader[event + this.gridIndex - this.gridContent.length]\r\n    );\r\n  }\r\n\r\n  getPageData() {\r\n    this.gridContent = [];\r\n\r\n    for (let i = 0; i < this.pageSize && this.dataLoader[this.gridIndex]; i++) {\r\n      this.gridContent.push(Object.values(this.getRowData(this.gridIndex++)));\r\n    }\r\n\r\n    if (this.pager) {\r\n      this.pager.updatePageFooter(this.gridIndex);\r\n    }\r\n  }\r\n\r\n  getRowData(index: number) {\r\n    const arrayData = [];\r\n    this.columns?.forEach((col) => {\r\n      const val = this.dataLoader[index][col.field];\r\n      arrayData.push(val ? val : '-');\r\n    });\r\n    return arrayData;\r\n  }\r\n\r\n  isDate(value: any) {\r\n    if (typeof value === 'number') {\r\n      return false;\r\n    } else {\r\n      let dateWrapper = new Date(value);\r\n      return !isNaN(dateWrapper.getDate());\r\n    }\r\n  }\r\n\r\n  isNewAppRoute() {\r\n    return !this.router.url.includes(`/${this.basePath}`);\r\n  }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "changeDector",
                        "type": "ChangeDetectorRef",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 48,
                "jsdoctags": [
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "changeDector",
                        "type": "ChangeDetectorRef",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnChanges",
                "OnDestroy",
                "AfterViewInit"
            ],
            "templateData": "<ik-card [padding]=\"false\">\r\n  <div [ngClass]=\"{ 'grid-padding': padding }\">\r\n    <ng-content select=\"ik-card-header\"></ng-content>\r\n    <ng-content select=\"ik-grid-search\"></ng-content>\r\n    <table *ngIf=\"!loading; else loader\" class=\"grid-table\">\r\n      <thead *ngIf=\"dataLoader?.length > 0\">\r\n        <tr>\r\n          <th\r\n            *ngFor=\"let column of columns.toArray()\"\r\n            class=\"column-header\"\r\n            [ngClass]=\"{ 'header-padding': !padding }\"\r\n          >\r\n            <ng-content select=\"ik-grid-column\"></ng-content>\r\n            <strong>{{ column.label }}</strong>\r\n          </th>\r\n        </tr>\r\n      </thead>\r\n      <tr\r\n        *ngFor=\"let row of gridContent; let rowIndex = index\"\r\n        class=\"content-row\"\r\n      >\r\n        <td\r\n          *ngFor=\"let value of row\"\r\n          class=\"grid-content\"\r\n          [ngClass]=\"{ 'content-ellipsis': !overflowEnabled }\"\r\n          (click)=\"onRowClick(rowIndex)\"\r\n        >\r\n          <ng-container *ngIf=\"isDate(value); else notDate\">\r\n            {{ value | date: \"longDate\" }}\r\n          </ng-container>\r\n          <ng-template #notDate>\r\n            {{ value }}\r\n          </ng-template>\r\n        </td>\r\n      </tr>\r\n    </table>\r\n    <ng-content select=\"ik-grid-pager\"></ng-content>\r\n    <ng-container *ngIf=\"dataLoader?.length <= 0 && !loading\">\r\n      <label class=\"item-label-margin label-text left no-data-margin\">{{\r\n        \"No\" + \" \" + translationKey\r\n      }}</label>\r\n    </ng-container>\r\n  </div>\r\n  <ng-content select=\"ik-grid-show-all\"></ng-content>\r\n</ik-card>\r\n\r\n<ng-template #loader>\r\n  <ik-loading></ik-loading>\r\n</ng-template>\r\n"
        },
        {
            "name": "GridPagerComponent",
            "id": "component-GridPagerComponent-824c981caf17c0741d737717533f226bbc06a843a168fe1f615415b1905807fb08227360adb3e370c92a1589fd13ad29ac6b2fe4c4380001f1b13f91891488ef",
            "file": "projects/insite-kit/src/lib/component/grid/grid-pager/grid-pager.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "ik-grid-pager",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "grid-pager.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "dataLength",
                    "defaultValue": "0",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 9
                },
                {
                    "name": "pageIndex",
                    "defaultValue": "0",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 15
                },
                {
                    "name": "pages",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 16
                },
                {
                    "name": "pageSize",
                    "defaultValue": "0",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 14
                },
                {
                    "name": "storageTag",
                    "defaultValue": "'gridCurrentPage'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 11
                },
                {
                    "name": "totalPages",
                    "defaultValue": "0",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 13
                },
                {
                    "name": "translationKey",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 10
                }
            ],
            "methodsClass": [
                {
                    "name": "calculatePageRowSize",
                    "args": [],
                    "optional": false,
                    "returnType": "number",
                    "typeParameters": [],
                    "line": 65,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "initPager",
                    "args": [
                        {
                            "name": "length",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "index",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "size",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "key",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "tag",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 20,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "length",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "index",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "size",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "key",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "tag",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "onNextPageClick",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 51,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "onPreviousPageClick",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 57,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "pageClick",
                    "args": [
                        {
                            "name": "page",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 46,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "page",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "setFooter",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 35,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "updatePageFooter",
                    "args": [
                        {
                            "name": "index",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 70,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "index",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "updateRoute",
                    "args": [
                        {
                            "name": "index",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 40,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "index",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'ik-grid-pager',\r\n  templateUrl: 'grid-pager.component.html',\r\n})\r\nexport class GridPagerComponent {\r\n  dataLength: number = 0;\r\n  translationKey: string = '';\r\n  storageTag = 'gridCurrentPage';\r\n\r\n  totalPages: number = 0;\r\n  pageSize: number = 0;\r\n  pageIndex: number = 0;\r\n  pages: any;\r\n\r\n  constructor(private readonly router: Router) {}\r\n\r\n  initPager(\r\n    length: number,\r\n    index: number,\r\n    size: number,\r\n    key: string,\r\n    tag: string\r\n  ) {\r\n    this.dataLength = length;\r\n    this.pageIndex = index;\r\n    this.pageSize = size;\r\n    this.translationKey = key;\r\n    this.storageTag = tag;\r\n    this.setFooter();\r\n  }\r\n\r\n  setFooter() {\r\n    this.totalPages = Math.ceil(this.dataLength / this.pageSize);\r\n    this.updatePageFooter(this.pageIndex);\r\n  }\r\n\r\n  updateRoute(index: number) {\r\n    localStorage.setItem(this.storageTag, `${index}`);\r\n    this.router.onSameUrlNavigation = 'reload';\r\n    this.router.navigate([], { state: { currentPage: index } });\r\n  }\r\n\r\n  pageClick(page: number) {\r\n    this.pageIndex = page * this.pageSize - this.pageSize;\r\n    this.updateRoute(this.pageIndex);\r\n  }\r\n\r\n  onNextPageClick() {\r\n    if (this.pageIndex < this.dataLength) {\r\n      this.updateRoute(this.pageIndex);\r\n    }\r\n  }\r\n\r\n  onPreviousPageClick() {\r\n    if (this.pageIndex > this.pageSize) {\r\n      this.pageIndex =\r\n        this.pageIndex - this.pageSize - this.calculatePageRowSize();\r\n      this.updateRoute(this.pageIndex);\r\n    }\r\n  }\r\n\r\n  calculatePageRowSize() {\r\n    const resultsLeft = this.dataLength - this.pageIndex;\r\n    return resultsLeft === 0 ? this.dataLength % this.pageSize : this.pageSize;\r\n  }\r\n\r\n  updatePageFooter(index: number) {\r\n    this.pageIndex = index;\r\n\r\n    const page = Math.ceil(this.pageIndex / this.pageSize);\r\n\r\n    if (page === 1) {\r\n      this.pages = [\r\n        {\r\n          pageNum: page,\r\n          active: true,\r\n        },\r\n        {\r\n          pageNum: page + 1,\r\n          active: false,\r\n        },\r\n        {\r\n          pageNum: page + 2,\r\n          active: false,\r\n        },\r\n      ];\r\n    } else if (page === this.totalPages) {\r\n      this.pages = [\r\n        {\r\n          pageNum: page - 2,\r\n          active: false,\r\n        },\r\n        {\r\n          pageNum: page - 1,\r\n          active: false,\r\n        },\r\n        {\r\n          pageNum: page,\r\n          active: true,\r\n        },\r\n      ];\r\n    } else {\r\n      this.pages = [\r\n        {\r\n          pageNum: page - 1,\r\n          active: false,\r\n        },\r\n        {\r\n          pageNum: page,\r\n          active: true,\r\n        },\r\n        {\r\n          pageNum: page + 1,\r\n          active: false,\r\n        },\r\n      ];\r\n    }\r\n  }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 16,
                "jsdoctags": [
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "templateData": "<div *ngIf=\"dataLength > 0\" class=\"grid-footer\">\r\n  <div\r\n    class=\"left-arrow inline-block left\"\r\n    (click)=\"onPreviousPageClick()\"\r\n  ></div>\r\n  <div\r\n    *ngFor=\"let page of pages\"\r\n    class=\"inline-block left\"\r\n    [ngClass]=\"{\r\n      active: page.active,\r\n      'page-number': page.pageNum <= this.totalPages && page.pageNum > 0\r\n    }\"\r\n    (click)=\"pageClick(page.pageNum)\"\r\n  >\r\n    <div *ngIf=\"page.pageNum <= this.totalPages && page.pageNum > 0\">\r\n      {{ page.pageNum }}\r\n    </div>\r\n  </div>\r\n  <div class=\"right-arrow inline-block left\" (click)=\"onNextPageClick()\"></div>\r\n  <label class=\"item-label-margin label-text right\">{{\r\n    dataLength + \" \" + translationKey\r\n  }}</label>\r\n</div>\r\n"
        },
        {
            "name": "GridSearchComponent",
            "id": "component-GridSearchComponent-a35d0a5a714b8a73fef03ca87123b484c554e2d21a7fbeb67e98391591df94b279914240fb741c28fa7415f7c831a7ce8a8a2b01075407e955a26bc4a37e50c5",
            "file": "projects/insite-kit/src/lib/component/grid/grid-search/grid-search.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "ik-grid-search",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "grid-search.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [
                {
                    "name": "search",
                    "defaultValue": "new EventEmitter<any>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 8,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "onSearch",
                    "args": [
                        {
                            "name": "value",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 10,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "value",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, EventEmitter, Output } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'ik-grid-search',\r\n  templateUrl: 'grid-search.component.html',\r\n})\r\nexport class GridSearchComponent {\r\n  @Output() search = new EventEmitter<any>();\r\n\r\n  onSearch(value: string) {\r\n    this.search.emit(value.trim());\r\n  }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "templateData": "<input\r\n  class=\"search\"\r\n  placeholder=\"Search\"\r\n  (change)=\"onSearch($event.srcElement.value)\"\r\n/>\r\n"
        },
        {
            "name": "GridShowAllComponent",
            "id": "component-GridShowAllComponent-1bd214e1cca13cc6204afc2bda3bd85db44228acfd0040c61e0065b70550d9b758a2003028251f94138f6716cb329e04397786ba42cb946d5ca9fddd24a34b87",
            "file": "projects/insite-kit/src/lib/component/grid/grid-show-all/grid-show-all.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "ik-grid-show-all",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "grid-show-all.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [
                {
                    "name": "showAll",
                    "defaultValue": "new EventEmitter<any>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 8,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [
                {
                    "name": "dataLength",
                    "defaultValue": "0",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 10
                }
            ],
            "methodsClass": [
                {
                    "name": "init",
                    "args": [
                        {
                            "name": "length",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 12,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "length",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "onShowAllClick",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 16,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, EventEmitter, Output } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'ik-grid-show-all',\r\n  templateUrl: 'grid-show-all.component.html',\r\n})\r\nexport class GridShowAllComponent {\r\n  @Output() showAll = new EventEmitter<any>();\r\n\r\n  dataLength = 0;\r\n\r\n  init(length: number) {\r\n    this.dataLength = length;\r\n  }\r\n\r\n  onShowAllClick() {\r\n    this.showAll.emit();\r\n  }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "templateData": "<div *ngIf=\"dataLength > 0\" class=\"showAll__link\" (click)=\"onShowAllClick()\">\r\n  Show All\r\n</div>\r\n"
        },
        {
            "name": "HeaderBackComponent",
            "id": "component-HeaderBackComponent-ee0d02724e4790329c3a7a3f64e24c2afe5fb08d8fbd4bf4e4cf3b55ea87cfb70c778b4c941bfab328a15bc6d306ecd1114f78eb7569bb2204467d86611b44c0",
            "file": "projects/insite-kit/src/lib/component/header/header-back/header-back.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "ik-header-back",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "header-back.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [
                {
                    "name": "back",
                    "defaultValue": "new EventEmitter<any>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 8,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "onBackClick",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 10,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, EventEmitter, Output } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'ik-header-back',\r\n  templateUrl: 'header-back.component.html',\r\n})\r\nexport class HeaderBackComponent {\r\n  @Output() back = new EventEmitter<any>();\r\n\r\n  onBackClick() {\r\n    this.back.emit();\r\n  }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "templateData": "<div class=\"back-arrow\"></div>\r\n"
        },
        {
            "name": "HeaderComponent",
            "id": "component-HeaderComponent-1308952c2ed05f02ce74eb2da1ac2f1df6dfd9222d56bea15955e6705ddd44467314474366158fce5d42c678a0e4b43e2d276d8112fb8a4a3fc58fb65807005c",
            "file": "projects/insite-kit/src/lib/component/header/header.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "ik-header",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "header.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "title",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 10,
                    "type": "string",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "backArrow",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "HeaderBackComponent",
                    "optional": false,
                    "description": "",
                    "line": 9,
                    "decorators": [
                        {
                            "name": "ContentChild",
                            "stringifiedArguments": "HeaderBackComponent"
                        }
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "onBackClick",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 12,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, ContentChild, Input } from '@angular/core';\r\nimport { HeaderBackComponent } from './header-back/header-back.component';\r\n\r\n@Component({\r\n  selector: 'ik-header',\r\n  templateUrl: 'header.component.html',\r\n})\r\nexport class HeaderComponent {\r\n  @ContentChild(HeaderBackComponent) backArrow: HeaderBackComponent;\r\n  @Input() title: string;\r\n\r\n  onBackClick() {\r\n    this.backArrow.onBackClick();\r\n  }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "templateData": "<div class=\"header-margin\">\r\n  <div class=\"inline-block\" (click)=\"onBackClick()\">\r\n    <ng-content select=\"ik-header-back\"></ng-content>\r\n    <div class=\"header-title\">{{ title }}</div>\r\n  </div>\r\n\r\n  <ng-content></ng-content>\r\n</div>\r\n"
        },
        {
            "name": "IconComponent",
            "id": "component-IconComponent-d914a1ad89fe773ffe226a0fb95cdc05cbe7f81ed14d2c75b20a3d127898f9b2cb10fa64d9e014c1a2f5ccbac1562ecfdf3e0bc3852af86b74ce6d8b80a12539",
            "file": "projects/insite-kit/src/lib/component/icon/icon.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "ik-icon",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "icon.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "icon",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 8,
                    "type": "string",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "iconClass",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 10
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 12,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'ik-icon',\r\n  templateUrl: 'icon.component.html',\r\n})\r\nexport class IconComponent implements OnInit {\r\n  @Input() icon: string;\r\n\r\n  iconClass: string;\r\n\r\n  ngOnInit() {\r\n    this.iconClass = `${this.icon}-icon`;\r\n  }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "implements": [
                "OnInit"
            ],
            "templateData": "<div [ngClass]=\"iconClass\">\r\n  <ng-content></ng-content>\r\n</div>\r\n"
        },
        {
            "name": "InsitePageComponent",
            "id": "component-InsitePageComponent-9013c23f57964b073f2f5a322dfce9983f03c3e536db2497360a69f779fb7a8c51bab9b7d77a9b503bb139b63d8b3e9b9ce7caf9d56667e86b24e66edc91da4c",
            "file": "projects/insite-kit/src/lib/component/insite-page/insite-page.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "ik-insite-page",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "insite-page.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "appName",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 10,
                    "type": "string",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "sideBar",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "SidebarComponent",
                    "optional": false,
                    "description": "",
                    "line": 9,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "'sidebarNav'"
                        }
                    ]
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input, ViewChild } from '@angular/core';\r\nimport { SidebarComponent } from '../sidebar/sidebar.component';\r\n\r\n@Component({\r\n  selector: 'ik-insite-page',\r\n  templateUrl: 'insite-page.component.html',\r\n})\r\nexport class InsitePageComponent {\r\n  @ViewChild('sidebarNav') sideBar: SidebarComponent;\r\n  @Input() appName: string;\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "templateData": "<div class=\"flex\">\r\n  <ik-navbar\r\n    [appName]=\"appName\"\r\n    [sideBarOpen]=\"sideBar.isOpen\"\r\n    (menuClick)=\"sideBar.toggle()\"\r\n  ></ik-navbar>\r\n  <div class=\"app-container flex-one\">\r\n    <ik-sidebar #sideBar></ik-sidebar>\r\n    <ng-content></ng-content>\r\n  </div>\r\n</div>\r\n<ik-footer></ik-footer>\r\n"
        },
        {
            "name": "LoadingComponent",
            "id": "component-LoadingComponent-3e3b33b585fa63c0f16af22b6966ea8fad6f8f618d3342464bbf7587dc9b58769d150e6ba2186c2d2839adb06b35b2e5d019d678f992fb37eaeb6ab345114206",
            "file": "projects/insite-kit/src/lib/component/loading/loading.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "ik-loading",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "loading.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "size",
                    "defaultValue": "'110px'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 8,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "thickness",
                    "defaultValue": "'8px'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 9,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "type",
                    "defaultValue": "'default'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 10,
                    "type": "\"default\" | \"ellipsis\"",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'ik-loading',\r\n  templateUrl: 'loading.component.html',\r\n})\r\nexport class LoadingComponent {\r\n  @Input() size = '110px';\r\n  @Input() thickness = '8px';\r\n  @Input() type: 'default' | 'ellipsis' = 'default';\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "templateData": "<div\r\n  *ngIf=\"type === 'default'\"\r\n  class=\"default-loader\"\r\n  [ngStyle]=\"{\r\n    width: size,\r\n    height: size,\r\n    'border-width': thickness\r\n  }\"\r\n></div>\r\n\r\n<div *ngIf=\"type === 'ellipsis'\" class=\"ellipsis-loader\">\r\n  <div></div>\r\n  <div></div>\r\n  <div></div>\r\n  <div></div>\r\n</div>\r\n"
        },
        {
            "name": "ModalActionBarComponent",
            "id": "component-ModalActionBarComponent-bcd42ad37466207b45a23297f27b910de60affb7a66125a6590b44e3638cc99ae41e4ecef4ffc16fcf57ba29128bbf62af28de0a89ebb4ae5852cbf49bf2568f",
            "file": "projects/insite-kit/src/lib/component/modal/modal-action-bar/modal-action-bar.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "ik-modal-action-bar",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "modal-action-bar.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'ik-modal-action-bar',\r\n  templateUrl: 'modal-action-bar.component.html',\r\n})\r\nexport class ModalActionBarComponent {}\r\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "templateData": "<div class=\"modal-footer ik-modal-footer\">\r\n  <ng-content></ng-content>\r\n</div>\r\n"
        },
        {
            "name": "ModalBodyComponent",
            "id": "component-ModalBodyComponent-e89a63ad3edacb38ef31ffa58f6ef545aec90eb97e26754aaf31fd3769d60e4037393758b33b9092259a8c81eafff3dacf445e76c35ffc3007cb2c26769e0907",
            "file": "projects/insite-kit/src/lib/component/modal/modal-body/modal-body.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "ik-modal-body",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "modal-body.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'ik-modal-body',\r\n  templateUrl: 'modal-body.component.html',\r\n})\r\nexport class ModalBodyComponent {}\r\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "templateData": "<div class=\"modal-body ik-modal-body\">\r\n  <ng-content></ng-content>\r\n</div>\r\n"
        },
        {
            "name": "ModalComponent",
            "id": "component-ModalComponent-c5f93b48e5840be1af9258dfbe7e00e4ae92afa4af226910d72094bce3da4782530a7fd4784eca7d860a42e231214217203916be510eec5295221bf03d86fa5a",
            "file": "projects/insite-kit/src/lib/component/modal/modal.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "ik-modal",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "modal.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "name",
                    "defaultValue": "'baseModal'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 9,
                    "type": "string",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "bootstrap",
                    "defaultValue": "bootstrap",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 10,
                    "modifierKind": [
                        121,
                        144
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "close",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 16,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "open",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 12,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input } from '@angular/core';\r\nimport * as bootstrap from 'bootstrap';\r\n\r\n@Component({\r\n  selector: 'ik-modal',\r\n  templateUrl: 'modal.component.html',\r\n})\r\nexport class ModalComponent {\r\n  @Input() name = 'baseModal';\r\n  private readonly bootstrap = bootstrap;\r\n\r\n  open() {\r\n    $(`#${this.name}`).modal('show');\r\n  }\r\n\r\n  close() {\r\n    $(`#${this.name}`).modal('hide');\r\n  }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "templateData": "<div class=\"modal fade\" [id]=\"name\" tabindex=\"-1\" role=\"dialog\">\r\n  <div class=\"modal-dialog\" role=\"document\">\r\n    <div class=\"modal-content\">\r\n      <ng-content></ng-content>\r\n    </div>\r\n  </div>\r\n</div>\r\n"
        },
        {
            "name": "ModalHeaderComponent",
            "id": "component-ModalHeaderComponent-e43b2941d8d9322707ad1a60bc8492d3f730a2e9c2c27f55559841674cab4078ba442eedd55903d109c5438a3a5a894c97889ce633ab7c03e8fda742243c5d14",
            "file": "projects/insite-kit/src/lib/component/modal/modal-header/modal-header.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "ik-modal-header",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "modal-header.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "title",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 8,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "type",
                    "defaultValue": "'default'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 9,
                    "type": "\"warning\" | \"info\" | \"danger\" | \"default\"",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'ik-modal-header',\r\n  templateUrl: 'modal-header.component.html',\r\n})\r\nexport class ModalHeaderComponent {\r\n  @Input() title = '';\r\n  @Input() type: 'warning' | 'info' | 'danger' | 'default' = 'default';\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "templateData": "<div class=\"modal-header ik-modal-header\" [ngClass]=\"type\">\r\n  <h5 class=\"modal-title ik-title\" [ngClass]=\"type\">{{ title }}</h5>\r\n</div>\r\n"
        },
        {
            "name": "NavbarComponent",
            "id": "component-NavbarComponent-b1d2bdcf3a1943529c10df057c3fa401ddf4a3bcf72f32bde7271761747e5e07e2b76074443cc39ec79424d9f91fb8d8c340c37f45b4192909f35fed50148c3c",
            "file": "projects/insite-kit/src/lib/component/navbar/navbar/navbar.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "ik-navbar",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "navbar.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "appName",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 27,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "sideBarOpen",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 28,
                    "type": "boolean",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "menuClick",
                    "defaultValue": "new EventEmitter<any>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 29,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [
                {
                    "name": "closeIcon",
                    "defaultValue": "faClose",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 34
                },
                {
                    "name": "menuIcon",
                    "defaultValue": "faBars",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 31
                },
                {
                    "name": "notificationBellIcon",
                    "defaultValue": "faBell",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 32
                },
                {
                    "name": "profileIcon",
                    "defaultValue": "faUser",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 33
                },
                {
                    "name": "Access",
                    "defaultValue": "Access",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 31,
                    "inheritance": {
                        "file": "BaseNavbarComponent"
                    }
                },
                {
                    "name": "destroy",
                    "defaultValue": "new Subject<void>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 28,
                    "inheritance": {
                        "file": "BaseNavbarComponent"
                    }
                },
                {
                    "name": "Feature",
                    "defaultValue": "Feature",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 30,
                    "inheritance": {
                        "file": "BaseNavbarComponent"
                    }
                },
                {
                    "name": "notificationAccess",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 32,
                    "inheritance": {
                        "file": "BaseNavbarComponent"
                    }
                },
                {
                    "name": "notificationCount",
                    "defaultValue": "0",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 27,
                    "inheritance": {
                        "file": "BaseNavbarComponent"
                    }
                },
                {
                    "name": "sideBar",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "SidebarComponent",
                    "optional": false,
                    "description": "",
                    "line": 25,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "'sideBarNav'"
                        }
                    ],
                    "inheritance": {
                        "file": "BaseNavbarComponent"
                    }
                }
            ],
            "methodsClass": [
                {
                    "name": "onBellClick",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 58,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "onLogOutClick",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 66,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "onMenuClick",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 54,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "onProfileClick",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 62,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "getNotifications",
                    "args": [
                        {
                            "name": "params",
                            "type": "Map<string | string[]>",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<Notification[]>",
                    "typeParameters": [],
                    "line": 55,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "params",
                            "type": "Map<string | string[]>",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "BaseNavbarComponent"
                    }
                },
                {
                    "name": "getParams",
                    "args": [],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 79,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "inheritance": {
                        "file": "BaseNavbarComponent"
                    }
                },
                {
                    "name": "listenToWebSocket",
                    "args": [],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 69,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "inheritance": {
                        "file": "BaseNavbarComponent"
                    }
                },
                {
                    "name": "ngOnDestroy",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 51,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "inheritance": {
                        "file": "BaseNavbarComponent"
                    }
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 45,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "inheritance": {
                        "file": "BaseNavbarComponent"
                    }
                },
                {
                    "name": "notificationUpdates",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 59,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "inheritance": {
                        "file": "BaseNavbarComponent"
                    }
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import {\r\n  Component,\r\n  EventEmitter,\r\n  Inject,\r\n  Input,\r\n  Output,\r\n  ViewContainerRef,\r\n} from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport {\r\n  faBars,\r\n  faBell,\r\n  faClose,\r\n  faUser,\r\n} from '@fortawesome/free-solid-svg-icons';\r\nimport { JwtService } from '../../../service/auth/jwt.service';\r\nimport { NotificationService } from '../../../service/subscription/notification/notification.service';\r\nimport { PopupService } from '../../../service/subscription/notification/popup.service';\r\nimport { SubscriptionService } from '../../../service/subscription/subscription.service';\r\n\r\nimport { BaseNavbarComponent } from '../base-navbar/base-navbar.component';\r\n@Component({\r\n  selector: 'ik-navbar',\r\n  templateUrl: 'navbar.component.html',\r\n})\r\nexport class NavbarComponent extends BaseNavbarComponent {\r\n  @Input() appName: string;\r\n  @Input() sideBarOpen: boolean = false;\r\n  @Output() menuClick = new EventEmitter<any>();\r\n\r\n  menuIcon = faBars;\r\n  notificationBellIcon = faBell;\r\n  profileIcon = faUser;\r\n  closeIcon = faClose;\r\n\r\n  constructor(\r\n    router: Router,\r\n    notificationService: NotificationService,\r\n    jwt: JwtService,\r\n    subscriptionService: SubscriptionService,\r\n    popupService: PopupService,\r\n    @Inject(ViewContainerRef) viewContainerRef\r\n  ) {\r\n    super(\r\n      router,\r\n      notificationService,\r\n      jwt,\r\n      subscriptionService,\r\n      popupService,\r\n      viewContainerRef\r\n    );\r\n  }\r\n\r\n  onMenuClick() {\r\n    this.menuClick.emit();\r\n  }\r\n\r\n  onBellClick() {\r\n    this.router.navigate(['/notification']);\r\n  }\r\n\r\n  onProfileClick() {\r\n    this.jwt.logOut();\r\n  }\r\n\r\n  onLogOutClick() {\r\n    this.jwt.logOut();\r\n    this.subscriptionService.deactivate();\r\n  }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "notificationService",
                        "type": "NotificationService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "jwt",
                        "type": "JwtService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "subscriptionService",
                        "type": "SubscriptionService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "popupService",
                        "type": "PopupService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "viewContainerRef",
                        "type": "",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 34,
                "jsdoctags": [
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "notificationService",
                        "type": "NotificationService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "jwt",
                        "type": "JwtService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "subscriptionService",
                        "type": "SubscriptionService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "popupService",
                        "type": "PopupService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "viewContainerRef",
                        "type": "",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "extends": "BaseNavbarComponent",
            "templateData": "<nav class=\"app-navbar\">\r\n  <div class=\"nav-icons__left\" (click)=\"onMenuClick()\">\r\n    <fa-icon [icon]=\"sideBarOpen ? closeIcon : menuIcon\"></fa-icon>\r\n  </div>\r\n\r\n  <div class=\"app-title inline-block\">{{ appName }}</div>\r\n  <div class=\"nav-icons__right\" (click)=\"onProfileClick()\">\r\n    <fa-icon [icon]=\"profileIcon\" (click)=\"onProfileClick()\"></fa-icon>\r\n  </div>\r\n  <fa-icon class=\"nav-icons__right\" [icon]=\"notificationBellIcon\"></fa-icon>\r\n</nav>\r\n"
        },
        {
            "name": "NotificationMessageComponent",
            "id": "component-NotificationMessageComponent-1fd2ae6a0f1a73485afaf54e616f1c56a14685192e90b7cd825b8864d925f1f9ad78120eaccccb419a9947a00d3081b9f6f83daf136ceed1060ff46358cf70a5",
            "file": "projects/insite-kit/src/lib/component/notification-message/notification-message.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "ik-notification-message",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "notification-message.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "notifications",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Notification[]",
                    "optional": false,
                    "description": "",
                    "line": 23
                },
                {
                    "name": "num",
                    "defaultValue": "0",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 25
                },
                {
                    "name": "timeout",
                    "defaultValue": "3500",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 24
                }
            ],
            "methodsClass": [
                {
                    "name": "addNotification",
                    "args": [
                        {
                            "name": "notification",
                            "type": "Notification",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 43,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nAdds the notification to the component list to be displayed.\n\n",
                    "description": "<p>Adds the notification to the component list to be displayed.</p>\n",
                    "jsdoctags": [
                        {
                            "name": {
                                "pos": 1090,
                                "end": 1102,
                                "flags": 4227072,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "notification"
                            },
                            "type": "Notification",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "pos": 1084,
                                "end": 1089,
                                "flags": 4227072,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "param"
                            },
                            "comment": "<p>The notification to be added.</p>\n"
                        }
                    ]
                },
                {
                    "name": "onNotificationRouteClick",
                    "args": [
                        {
                            "name": "notification",
                            "type": "Notification",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 34,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nRoutes to the notifications page when it is clicked.\n\n",
                    "description": "<p>Routes to the notifications page when it is clicked.</p>\n",
                    "jsdoctags": [
                        {
                            "name": {
                                "pos": 797,
                                "end": 809,
                                "flags": 4227072,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "notification"
                            },
                            "type": "Notification",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "pos": 791,
                                "end": 796,
                                "flags": 4227072,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "param"
                            },
                            "comment": "<p>The notification that is being displayed.</p>\n"
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import {\r\n  animate,\r\n  state,\r\n  style,\r\n  transition,\r\n  trigger,\r\n} from '@angular/animations';\r\nimport { Component } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { Notification } from '../../model/notification.model';\r\n\r\n@Component({\r\n  selector: 'ik-notification-message',\r\n  templateUrl: 'notification-message.component.html',\r\n  animations: [\r\n    trigger('fadeInOut', [\r\n      state('in', style({ opacity: 1 })),\r\n      transition(':leave', animate(600, style({ opacity: 0 }))),\r\n    ]),\r\n  ],\r\n})\r\nexport class NotificationMessageComponent {\r\n  notifications: Notification[] = [];\r\n  timeout: number = 3500;\r\n  num = 0;\r\n\r\n  constructor(private readonly router: Router) {}\r\n\r\n  /**\r\n   * Routes to the notifications page when it is clicked.\r\n   *\r\n   * @param notification The notification that is being displayed.\r\n   */\r\n  onNotificationRouteClick(notification: Notification) {\r\n    this.router.navigate([`/notification/details/${notification.id}`]);\r\n  }\r\n\r\n  /**\r\n   * Adds the notification to the component list to be displayed.\r\n   *\r\n   * @param notification The notification to be added.\r\n   */\r\n  addNotification(notification: Notification) {\r\n    this.notifications = [...this.notifications, notification];\r\n    setTimeout(() => {\r\n      this.notifications = this.notifications.filter(\r\n        (m) => m.id !== notification.id\r\n      );\r\n    }, this.timeout);\r\n  }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 25,
                "jsdoctags": [
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "templateData": "<div\r\n  [@fadeInOut]=\"'in'\"\r\n  *ngFor=\"let notification of notifications\"\r\n  class=\"notification-card\"\r\n  (click)=\"onNotificationRouteClick(notification)\"\r\n>\r\n  <div class=\"notification-overall\">\r\n    <ik-icon class=\"notification-icon\" icon=\"notification\"></ik-icon>\r\n    <div class=\"notification-content\">\r\n      <span class=\"title\">{{ notification | formatNotitication }}</span>\r\n      <span class=\"message\">Just Now</span>\r\n    </div>\r\n  </div>\r\n</div>\r\n"
        },
        {
            "name": "PrivacyPolicyModalComponent",
            "id": "component-PrivacyPolicyModalComponent-c6d93c3eda031efc896721c81e5ef0a412f5c9798cecb2a8e718971c28ba5ca5ae69859d497804c71b2eafc22ff0196b8e8cf3820153ea0129a509779a48db20",
            "file": "projects/insite-kit/src/lib/component/footer/modals/privacy-policy-modal/privacy-policy-modal.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "ik-privacy-policy-modal",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "privacy-policy-modal.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "modal",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ModalComponent",
                    "optional": false,
                    "description": "",
                    "line": 9,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "'privacyModal'"
                        }
                    ]
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, ViewChild } from '@angular/core';\r\nimport { ModalComponent } from '../../../modal/modal.component';\r\n\r\n@Component({\r\n  selector: 'ik-privacy-policy-modal',\r\n  templateUrl: 'privacy-policy-modal.component.html',\r\n})\r\nexport class PrivacyPolicyModalComponent {\r\n  @ViewChild('privacyModal') modal: ModalComponent;\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "templateData": "<ik-modal #privacyModal name=\"privacyModal\">\r\n  <ik-modal-header title=\"Privacy Policy\"></ik-modal-header>\r\n  <ik-modal-body>\r\n    <div class=\"modal-content-text\">\r\n      The Hydropincs's website uses both session cookies (which expire when you\r\n      close your browser) and local storage cookies (which remain on your hard\r\n      drive for an extended period of time) to help enhance your site\r\n      experience. These cookies do not contain or collect any personal data and\r\n      are used to deliver content relative to your interests in the site.\r\n    </div>\r\n  </ik-modal-body>\r\n  <ik-modal-action-bar>\r\n    <button\r\n      class=\"btn btn-flat btn-primary btn-right btn-modal\"\r\n      (click)=\"privacyModal.close()\"\r\n    >\r\n      Okay\r\n    </button>\r\n  </ik-modal-action-bar>\r\n</ik-modal>\r\n"
        },
        {
            "name": "ProjectModalComponent",
            "id": "component-ProjectModalComponent-3dbbf3b67b0ebaeeedae82a8e3ebf404ed31eea6c759e98d17506594c78e639b04052ebdf8def8a931838fe2fb7489e76b9833ea65370a71d1e70c519e3ab592",
            "file": "projects/insite-kit/src/lib/component/footer/modals/project-modal/project-modal.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "ik-project-modal",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "project-modal.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "modal",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ModalComponent",
                    "optional": false,
                    "description": "",
                    "line": 9,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "'projectModal'"
                        }
                    ]
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, ViewChild } from '@angular/core';\r\nimport { ModalComponent } from '../../../modal/modal.component';\r\n\r\n@Component({\r\n  selector: 'ik-project-modal',\r\n  templateUrl: 'project-modal.component.html',\r\n})\r\nexport class ProjectModalComponent {\r\n  @ViewChild('projectModal') modal: ModalComponent;\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "templateData": "<ik-modal #projectModal name=\"projectModal\">\r\n  <ik-modal-header title=\"Project Source\"></ik-modal-header>\r\n  <ik-modal-body>\r\n    <div class=\"modal-content-text\">\r\n      These are the links to the Hydroponics's website source code. These links\r\n      are only useful to the developers working on the site and anyone who has\r\n      read privileges to the code. If you are not authorized to view these links\r\n      then you will not be able to see the source code.\r\n    </div>\r\n    <div class=\"overall-link-content\">\r\n      <div class=\"content-links\">\r\n        Link to API Code:\r\n        <a\r\n          href=\"https://github.com/hydroponics-system/hydro-microservice\"\r\n          target=\"_blank\"\r\n          >Hydroponics's API</a\r\n        >\r\n      </div>\r\n      <div class=\"content-links\">\r\n        Link to UI Code:\r\n        <a\r\n          href=\"https://github.com/hydroponics-system/hydroponics-ui\"\r\n          target=\"_blank\"\r\n          >Hydroponics's UI</a\r\n        >\r\n      </div>\r\n    </div>\r\n  </ik-modal-body>\r\n  <ik-modal-action-bar>\r\n    <button\r\n      class=\"btn btn-flat btn-primary btn-right btn-modal\"\r\n      (click)=\"projectModal.close()\"\r\n    >\r\n      Okay\r\n    </button>\r\n  </ik-modal-action-bar>\r\n</ik-modal>\r\n"
        },
        {
            "name": "SidebarComponent",
            "id": "component-SidebarComponent-80a0c5abedce94aea3cba34906ae7496c87f630c20bae43dc8dc3ca216240345b4edc54ea414beec0871589d43b811a805c9898e393b76de36c1cc1fcf629c14",
            "file": "projects/insite-kit/src/lib/component/sidebar/sidebar.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "ik-sidebar",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "sidebar.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "aboutIcon",
                    "defaultValue": "faCircleInfo",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 24
                },
                {
                    "name": "closeIcon",
                    "defaultValue": "faClose",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 21
                },
                {
                    "name": "contactIcon",
                    "defaultValue": "faEnvelope",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 25
                },
                {
                    "name": "gitIcon",
                    "defaultValue": "faGithub",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 28
                },
                {
                    "name": "homeIcon",
                    "defaultValue": "faHome",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 22
                },
                {
                    "name": "isOpen",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 19
                },
                {
                    "name": "serviceIcon",
                    "defaultValue": "faScrewdriverWrench",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 23
                },
                {
                    "name": "settingsIcon",
                    "defaultValue": "faGear",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 29
                },
                {
                    "name": "systemIcon",
                    "defaultValue": "faGears",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 26
                },
                {
                    "name": "usersIcon",
                    "defaultValue": "faUsers",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 27
                }
            ],
            "methodsClass": [
                {
                    "name": "close",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 36,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "open",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 31,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "toggle",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 41,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\r\nimport { faGithub } from '@fortawesome/free-brands-svg-icons';\r\nimport {\r\n  faCircleInfo,\r\n  faClose,\r\n  faEnvelope,\r\n  faGear,\r\n  faGears,\r\n  faHome,\r\n  faScrewdriverWrench,\r\n  faUsers,\r\n} from '@fortawesome/free-solid-svg-icons';\r\n\r\n@Component({\r\n  selector: 'ik-sidebar',\r\n  templateUrl: 'sidebar.component.html',\r\n})\r\nexport class SidebarComponent {\r\n  isOpen = false;\r\n\r\n  closeIcon = faClose;\r\n  homeIcon = faHome;\r\n  serviceIcon = faScrewdriverWrench;\r\n  aboutIcon = faCircleInfo;\r\n  contactIcon = faEnvelope;\r\n  systemIcon = faGears;\r\n  usersIcon = faUsers;\r\n  gitIcon = faGithub;\r\n  settingsIcon = faGear;\r\n\r\n  open() {\r\n    document.getElementById('sideBarNav').style.width = '250px';\r\n    this.isOpen = true;\r\n  }\r\n\r\n  close() {\r\n    document.getElementById('sideBarNav').style.width = '0';\r\n    this.isOpen = false;\r\n  }\r\n\r\n  toggle() {\r\n    if (this.isOpen) {\r\n      this.close();\r\n    } else {\r\n      this.open();\r\n    }\r\n  }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "templateData": "<div class=\"sidenav\" id=\"sideBarNav\" #sidebarNav>\r\n  <a href=\"#home\">\r\n    <fa-icon class=\"nav-icon\" [icon]=\"homeIcon\"></fa-icon>\r\n    <span class=\"nav-category\">Home</span>\r\n  </a>\r\n  <a href=\"#users\">\r\n    <fa-icon class=\"nav-icon\" [icon]=\"usersIcon\"></fa-icon>\r\n    <span class=\"nav-category\">Users</span>\r\n  </a>\r\n  <a href=\"#services\">\r\n    <fa-icon class=\"nav-icon\" [icon]=\"serviceIcon\"></fa-icon>\r\n    <span class=\"nav-category\">Services</span>\r\n  </a>\r\n  <a href=\"#systems\">\r\n    <fa-icon class=\"nav-icon\" [icon]=\"systemIcon\"></fa-icon>\r\n    <span class=\"nav-category\">Systems</span>\r\n  </a>\r\n  <a href=\"#about\">\r\n    <fa-icon class=\"nav-icon\" [icon]=\"aboutIcon\"></fa-icon>\r\n    <span class=\"nav-category\">About</span>\r\n  </a>\r\n  <a href=\"#repo\">\r\n    <fa-icon class=\"nav-icon\" [icon]=\"gitIcon\"></fa-icon>\r\n    <span class=\"nav-category\">Repositories</span>\r\n  </a>\r\n  <a href=\"#contact\">\r\n    <fa-icon class=\"nav-icon\" [icon]=\"contactIcon\"></fa-icon>\r\n    <span class=\"nav-category\">Contact</span>\r\n  </a>\r\n  <a href=\"#settings\">\r\n    <fa-icon class=\"nav-icon\" [icon]=\"settingsIcon\"></fa-icon>\r\n    <span class=\"nav-category\">Settings</span>\r\n  </a>\r\n</div>\r\n"
        }
    ],
    "modules": [
        {
            "name": "InsiteKitModule",
            "id": "module-InsiteKitModule-c1cf9136cd9339f204a69b98ef462bc95fe6345f9a3efa257490e775a0f39aba4b4583843e3a73fb02119debeeed3d34a5aed4bed8e7bc8a16e5370d46192f09",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "projects/insite-kit/src/lib/insite-kit.module.ts",
            "methods": [
                {
                    "name": "forRoot",
                    "args": [
                        {
                            "name": "environment",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "ModuleWithProviders<InsiteKitModule>",
                    "typeParameters": [],
                    "line": 131,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        124
                    ],
                    "jsdoctags": [
                        {
                            "name": "environment",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "sourceCode": "import { APP_BASE_HREF, CommonModule } from '@angular/common';\r\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\r\nimport { ModuleWithProviders, NgModule } from '@angular/core';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { RouterModule } from '@angular/router';\r\nimport { JwtModule } from '@auth0/angular-jwt';\r\nimport { FontAwesomeModule } from '@fortawesome/angular-fontawesome';\r\nimport { ToastrModule } from 'ngx-toastr';\r\nimport { BannerComponent } from './component/banner/banner.component';\r\nimport { CardHeaderComponent } from './component/card/card-header/card-header.component';\r\nimport { CardInfoComponent } from './component/card/card-info/card-info.component';\r\nimport { CardComponent } from './component/card/card.component';\r\nimport { CheckboxComponent } from './component/checkbox/checkbox.component';\r\nimport { FooterComponent } from './component/footer/footer.component';\r\nimport { ContactAdminModalComponent } from './component/footer/modals/contact-admin-modal/contact-admin-modal.component';\r\nimport { PrivacyPolicyModalComponent } from './component/footer/modals/privacy-policy-modal/privacy-policy-modal.component';\r\nimport { ProjectModalComponent } from './component/footer/modals/project-modal/project-modal.component';\r\nimport { GridColumnComponent } from './component/grid/grid-column/grid-column.component';\r\nimport { GridPagerComponent } from './component/grid/grid-pager/grid-pager.component';\r\nimport { GridSearchComponent } from './component/grid/grid-search/grid-search.component';\r\nimport { GridShowAllComponent } from './component/grid/grid-show-all/grid-show-all.component';\r\nimport { GridComponent } from './component/grid/grid.component';\r\nimport { HeaderBackComponent } from './component/header/header-back/header-back.component';\r\nimport { HeaderComponent } from './component/header/header.component';\r\nimport { IconComponent } from './component/icon/icon.component';\r\nimport { InsitePageComponent } from './component/insite-page/insite-page.component';\r\nimport { LoadingComponent } from './component/loading/loading.component';\r\nimport { ModalActionBarComponent } from './component/modal/modal-action-bar/modal-action-bar.component';\r\nimport { ModalBodyComponent } from './component/modal/modal-body/modal-body.component';\r\nimport { ModalHeaderComponent } from './component/modal/modal-header/modal-header.component';\r\nimport { ModalComponent } from './component/modal/modal.component';\r\nimport { BaseNavbarComponent } from './component/navbar/base-navbar/base-navbar.component';\r\nimport { NavbarComponent } from './component/navbar/navbar/navbar.component';\r\nimport { NotificationMessageComponent } from './component/notification-message/notification-message.component';\r\nimport { SidebarComponent } from './component/sidebar/sidebar.component';\r\nimport { BasicHttpInterceptorService } from './service/interceptor/http-interceptor.service';\r\nimport { UsernamePipe } from './service/pipe/format-user-name.pipe';\r\nimport { NotificationMessagePipe } from './service/pipe/notification-message.pipe';\r\n\r\nexport function tokenGetter() {\r\n  return localStorage.getItem('token');\r\n}\r\n\r\n@NgModule({\r\n  declarations: [\r\n    NotificationMessageComponent,\r\n    IconComponent,\r\n    UsernamePipe,\r\n    NotificationMessagePipe,\r\n    NavbarComponent,\r\n    BaseNavbarComponent,\r\n    SidebarComponent,\r\n    InsitePageComponent,\r\n    ContactAdminModalComponent,\r\n    PrivacyPolicyModalComponent,\r\n    ProjectModalComponent,\r\n    ModalActionBarComponent,\r\n    ModalBodyComponent,\r\n    ModalHeaderComponent,\r\n    ModalComponent,\r\n    FooterComponent,\r\n    LoadingComponent,\r\n    BannerComponent,\r\n    CardHeaderComponent,\r\n    CardInfoComponent,\r\n    CardComponent,\r\n    CheckboxComponent,\r\n    GridColumnComponent,\r\n    GridPagerComponent,\r\n    GridSearchComponent,\r\n    GridShowAllComponent,\r\n    GridComponent,\r\n    HeaderBackComponent,\r\n    HeaderComponent,\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    RouterModule.forRoot([]),\r\n    HttpClientModule,\r\n    FontAwesomeModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    JwtModule.forRoot({\r\n      config: {\r\n        tokenGetter: tokenGetter,\r\n      },\r\n    }),\r\n    ToastrModule.forRoot({\r\n      positionClass: 'toast-top-right',\r\n    }),\r\n  ],\r\n  exports: [\r\n    NotificationMessageComponent,\r\n    IconComponent,\r\n    UsernamePipe,\r\n    NotificationMessagePipe,\r\n    NavbarComponent,\r\n    BaseNavbarComponent,\r\n    SidebarComponent,\r\n    InsitePageComponent,\r\n    ContactAdminModalComponent,\r\n    PrivacyPolicyModalComponent,\r\n    ProjectModalComponent,\r\n    ModalActionBarComponent,\r\n    ModalBodyComponent,\r\n    ModalHeaderComponent,\r\n    ModalComponent,\r\n    FooterComponent,\r\n    LoadingComponent,\r\n    BannerComponent,\r\n    CardHeaderComponent,\r\n    CardInfoComponent,\r\n    CardComponent,\r\n    CheckboxComponent,\r\n    GridColumnComponent,\r\n    GridPagerComponent,\r\n    GridSearchComponent,\r\n    GridShowAllComponent,\r\n    GridComponent,\r\n    HeaderBackComponent,\r\n    HeaderComponent,\r\n  ],\r\n  entryComponents: [ModalComponent, NotificationMessageComponent],\r\n  providers: [\r\n    UsernamePipe,\r\n    NotificationMessagePipe,\r\n    { provide: APP_BASE_HREF, useValue: '/' },\r\n  ],\r\n})\r\nexport class InsiteKitModule {\r\n  static forRoot(environment: any): ModuleWithProviders<InsiteKitModule> {\r\n    return {\r\n      ngModule: InsiteKitModule,\r\n      providers: [\r\n        {\r\n          provide: 'env',\r\n          useValue: environment,\r\n        },\r\n        {\r\n          provide: HTTP_INTERCEPTORS,\r\n          useClass: BasicHttpInterceptorService,\r\n          multi: true,\r\n        },\r\n      ],\r\n    };\r\n  }\r\n}\r\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "BannerComponent"
                        },
                        {
                            "name": "BaseNavbarComponent"
                        },
                        {
                            "name": "CardComponent"
                        },
                        {
                            "name": "CardHeaderComponent"
                        },
                        {
                            "name": "CardInfoComponent"
                        },
                        {
                            "name": "CheckboxComponent"
                        },
                        {
                            "name": "ContactAdminModalComponent"
                        },
                        {
                            "name": "FooterComponent"
                        },
                        {
                            "name": "GridColumnComponent"
                        },
                        {
                            "name": "GridComponent"
                        },
                        {
                            "name": "GridPagerComponent"
                        },
                        {
                            "name": "GridSearchComponent"
                        },
                        {
                            "name": "GridShowAllComponent"
                        },
                        {
                            "name": "HeaderBackComponent"
                        },
                        {
                            "name": "HeaderComponent"
                        },
                        {
                            "name": "IconComponent"
                        },
                        {
                            "name": "InsitePageComponent"
                        },
                        {
                            "name": "LoadingComponent"
                        },
                        {
                            "name": "ModalActionBarComponent"
                        },
                        {
                            "name": "ModalBodyComponent"
                        },
                        {
                            "name": "ModalComponent"
                        },
                        {
                            "name": "ModalHeaderComponent"
                        },
                        {
                            "name": "NavbarComponent"
                        },
                        {
                            "name": "NotificationMessageComponent"
                        },
                        {
                            "name": "NotificationMessagePipe"
                        },
                        {
                            "name": "PrivacyPolicyModalComponent"
                        },
                        {
                            "name": "ProjectModalComponent"
                        },
                        {
                            "name": "SidebarComponent"
                        },
                        {
                            "name": "UsernamePipe"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "BannerComponent"
                        },
                        {
                            "name": "BaseNavbarComponent"
                        },
                        {
                            "name": "CardComponent"
                        },
                        {
                            "name": "CardHeaderComponent"
                        },
                        {
                            "name": "CardInfoComponent"
                        },
                        {
                            "name": "CheckboxComponent"
                        },
                        {
                            "name": "ContactAdminModalComponent"
                        },
                        {
                            "name": "FooterComponent"
                        },
                        {
                            "name": "GridColumnComponent"
                        },
                        {
                            "name": "GridComponent"
                        },
                        {
                            "name": "GridPagerComponent"
                        },
                        {
                            "name": "GridSearchComponent"
                        },
                        {
                            "name": "GridShowAllComponent"
                        },
                        {
                            "name": "HeaderBackComponent"
                        },
                        {
                            "name": "HeaderComponent"
                        },
                        {
                            "name": "IconComponent"
                        },
                        {
                            "name": "InsitePageComponent"
                        },
                        {
                            "name": "LoadingComponent"
                        },
                        {
                            "name": "ModalActionBarComponent"
                        },
                        {
                            "name": "ModalBodyComponent"
                        },
                        {
                            "name": "ModalComponent"
                        },
                        {
                            "name": "ModalHeaderComponent"
                        },
                        {
                            "name": "NavbarComponent"
                        },
                        {
                            "name": "NotificationMessageComponent"
                        },
                        {
                            "name": "NotificationMessagePipe"
                        },
                        {
                            "name": "PrivacyPolicyModalComponent"
                        },
                        {
                            "name": "ProjectModalComponent"
                        },
                        {
                            "name": "SidebarComponent"
                        },
                        {
                            "name": "UsernamePipe"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        }
    ],
    "miscellaneous": {
        "variables": [
            {
                "name": "BannerContent",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/insite-kit/src/lib/component/banner/banner.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Basic",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/insite-kit/src/lib/component/header/header-back/header-back.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "CardContent",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/insite-kit/src/lib/component/card/card.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "CardInfo",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/insite-kit/src/lib/component/card/card-info/card-info.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "context",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/insite-kit/src/test.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "require.context('./', true, /\\.spec\\.ts$/)"
            },
            {
                "name": "environment",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/insite-kit/src/lib/test/lib-test-env.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{\r\n  production: true,\r\n  isLocal: false,\r\n  apiUrl: 'test-host.com',\r\n}",
                "rawdescription": "Default configuration for running the application locally.",
                "description": "<p>Default configuration for running the application locally.</p>\n"
            },
            {
                "name": "InisteTestData",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/insite-kit/src/lib/test/test-data.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "new InsiteDataObject()"
            },
            {
                "name": "Primary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/insite-kit/src/lib/component/header/header.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "require",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/insite-kit/src/test.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "literal type"
            },
            {
                "name": "setupTests",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/insite-kit/src/lib/test/test-setup.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "(initTest, cleanupStyles = true) => {\r\n  beforeEach(() => {\r\n    initTest();\r\n  });\r\n\r\n  // Cleanup styles injected by ng-select and other various style modifications after each TestBed suite is complete.\r\n  if (cleanupStyles) {\r\n    afterAll(() => {\r\n      window.document\r\n        .querySelectorAll('style')\r\n        .forEach((style: HTMLStyleElement) => style.remove());\r\n    });\r\n  }\r\n}",
                "rawdescription": "Wrapper function to initialize a TestBed configuration with global before/after methods defined.",
                "description": "<p>Wrapper function to initialize a TestBed configuration with global before/after methods defined.</p>\n"
            },
            {
                "name": "STOMP_SOCKET_CONFIG",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/insite-kit/src/lib/service/subscription/stomp.config.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "RxStompConfig",
                "defaultValue": "{\r\n  brokerURL: '',\r\n\r\n  // How often to heartbeat?\r\n  // Interval in milliseconds, set to 0 to disable\r\n  heartbeatIncoming: 20000, // Typical value 0 - disabled\r\n  heartbeatOutgoing: 20000, // Typical value 20000 - every 20 seconds\r\n\r\n  // Wait in milliseconds before attempting auto reconnect\r\n  // Set to 0 to disable\r\n  // Typical value 500 (500 milli seconds)\r\n  reconnectDelay: 5000,\r\n}"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/insite-kit/src/lib/component/banner/banner.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<BannerComponent>",
                "defaultValue": "(args: BannerComponent) => ({\r\n  props: args,\r\n  template: `<ik-banner [type]=\"type\">This is a warning message banner!</ik-banner>`,\r\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/insite-kit/src/lib/component/card/card.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<CardComponent>",
                "defaultValue": "(args: CardComponent) => ({\r\n  props: args,\r\n  template: `\r\n  <div class=\"app-container\" style=\"width: 50%;\">\r\n    <ik-card [padding]=\"padding\" [marginBottom]=\"marginBottom\">\r\n      This will be inside of the card\r\n    </ik-card>\r\n    <ik-card [padding]=\"padding\" [marginBottom]=\"marginBottom\">\r\n      Second Card to show margin\r\n    </ik-card>\r\n  </div>`,\r\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/insite-kit/src/lib/component/header/header.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<HeaderComponent>",
                "defaultValue": "(args: HeaderComponent) => ({\r\n  props: args,\r\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/insite-kit/src/lib/component/card/card-info/card-info.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<CardInfoComponent>",
                "defaultValue": "(args: CardInfoComponent) => ({\r\n  props: args,\r\n  template: `\r\n  <div class=\"app-container\" style=\"width: 50%;\">\r\n    <ik-card>\r\n      <ik-card-info [header]=\"header\" [text]=\"text\" [contentColor]=\"contentColor\" [padding]=\"padding\"></ik-card-info>\r\n    </ik-card>\r\n  </div>`,\r\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/insite-kit/src/lib/component/header/header-back/header-back.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<HeaderBackComponent>",
                "defaultValue": "(args: HeaderBackComponent) => ({\r\n  props: args,\r\n  template: `<ik-header title=\"Header Back\"><ik-header-back></ik-header-back></ik-header>`,\r\n})"
            },
            {
                "name": "TOKEN_NAME",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/insite-kit/src/lib/service/auth/jwt.service.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "string",
                "defaultValue": "'token'"
            }
        ],
        "functions": [
            {
                "name": "tokenGetter",
                "file": "projects/insite-kit/src/lib/insite-kit.module.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "args": []
            }
        ],
        "typealiases": [
            {
                "name": "GridDataObservable",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "Observable<any[]>",
                "file": "projects/insite-kit/src/lib/model/grid.model.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 177
            }
        ],
        "enumerations": [
            {
                "name": "Access",
                "childs": [
                    {
                        "name": "CREATE",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "c"
                    },
                    {
                        "name": "READ",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "r"
                    },
                    {
                        "name": "UPDATE",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "u"
                    },
                    {
                        "name": "DELETE",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "d"
                    }
                ],
                "ctype": "miscellaneous",
                "subtype": "enum",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "file": "projects/insite-kit/src/lib/model/common.model.ts"
            },
            {
                "name": "Feature",
                "childs": [
                    {
                        "name": "USER_DETAIL",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "detail"
                    },
                    {
                        "name": "PROFILE",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "profile"
                    },
                    {
                        "name": "NOTIFICATION",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "notification"
                    }
                ],
                "ctype": "miscellaneous",
                "subtype": "enum",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "file": "projects/insite-kit/src/lib/model/common.model.ts"
            },
            {
                "name": "NotificationAction",
                "childs": [
                    {
                        "name": "CREATE",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "C"
                    },
                    {
                        "name": "READ",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "R"
                    },
                    {
                        "name": "UPDATE",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "U"
                    },
                    {
                        "name": "DELETE",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "D"
                    }
                ],
                "ctype": "miscellaneous",
                "subtype": "enum",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "file": "projects/insite-kit/src/lib/model/notification.model.ts"
            },
            {
                "name": "NotificationType",
                "childs": [
                    {
                        "name": "USER",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "USER"
                    },
                    {
                        "name": "SYSTEM_UPDATE",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "SYSTEM_UPDATE"
                    }
                ],
                "ctype": "miscellaneous",
                "subtype": "enum",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "file": "projects/insite-kit/src/lib/model/notification.model.ts"
            },
            {
                "name": "WebRole",
                "childs": [
                    {
                        "name": "USER",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": 1
                    },
                    {
                        "name": "SYSTEM_USER",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": 2
                    },
                    {
                        "name": "DEVELOPER",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": 3
                    },
                    {
                        "name": "ADMIN",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": 4
                    }
                ],
                "ctype": "miscellaneous",
                "subtype": "enum",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "file": "projects/insite-kit/src/lib/model/common.model.ts"
            }
        ],
        "groupedVariables": {
            "projects/insite-kit/src/lib/component/banner/banner.stories.ts": [
                {
                    "name": "BannerContent",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/insite-kit/src/lib/component/banner/banner.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/insite-kit/src/lib/component/banner/banner.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<BannerComponent>",
                    "defaultValue": "(args: BannerComponent) => ({\r\n  props: args,\r\n  template: `<ik-banner [type]=\"type\">This is a warning message banner!</ik-banner>`,\r\n})"
                }
            ],
            "projects/insite-kit/src/lib/component/header/header-back/header-back.stories.ts": [
                {
                    "name": "Basic",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/insite-kit/src/lib/component/header/header-back/header-back.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/insite-kit/src/lib/component/header/header-back/header-back.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<HeaderBackComponent>",
                    "defaultValue": "(args: HeaderBackComponent) => ({\r\n  props: args,\r\n  template: `<ik-header title=\"Header Back\"><ik-header-back></ik-header-back></ik-header>`,\r\n})"
                }
            ],
            "projects/insite-kit/src/lib/component/card/card.stories.ts": [
                {
                    "name": "CardContent",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/insite-kit/src/lib/component/card/card.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/insite-kit/src/lib/component/card/card.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<CardComponent>",
                    "defaultValue": "(args: CardComponent) => ({\r\n  props: args,\r\n  template: `\r\n  <div class=\"app-container\" style=\"width: 50%;\">\r\n    <ik-card [padding]=\"padding\" [marginBottom]=\"marginBottom\">\r\n      This will be inside of the card\r\n    </ik-card>\r\n    <ik-card [padding]=\"padding\" [marginBottom]=\"marginBottom\">\r\n      Second Card to show margin\r\n    </ik-card>\r\n  </div>`,\r\n})"
                }
            ],
            "projects/insite-kit/src/lib/component/card/card-info/card-info.stories.ts": [
                {
                    "name": "CardInfo",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/insite-kit/src/lib/component/card/card-info/card-info.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/insite-kit/src/lib/component/card/card-info/card-info.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<CardInfoComponent>",
                    "defaultValue": "(args: CardInfoComponent) => ({\r\n  props: args,\r\n  template: `\r\n  <div class=\"app-container\" style=\"width: 50%;\">\r\n    <ik-card>\r\n      <ik-card-info [header]=\"header\" [text]=\"text\" [contentColor]=\"contentColor\" [padding]=\"padding\"></ik-card-info>\r\n    </ik-card>\r\n  </div>`,\r\n})"
                }
            ],
            "projects/insite-kit/src/test.ts": [
                {
                    "name": "context",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/insite-kit/src/test.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "require.context('./', true, /\\.spec\\.ts$/)"
                },
                {
                    "name": "require",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/insite-kit/src/test.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "literal type"
                }
            ],
            "projects/insite-kit/src/lib/test/lib-test-env.ts": [
                {
                    "name": "environment",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/insite-kit/src/lib/test/lib-test-env.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{\r\n  production: true,\r\n  isLocal: false,\r\n  apiUrl: 'test-host.com',\r\n}",
                    "rawdescription": "Default configuration for running the application locally.",
                    "description": "<p>Default configuration for running the application locally.</p>\n"
                }
            ],
            "projects/insite-kit/src/lib/test/test-data.ts": [
                {
                    "name": "InisteTestData",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/insite-kit/src/lib/test/test-data.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "new InsiteDataObject()"
                }
            ],
            "projects/insite-kit/src/lib/component/header/header.stories.ts": [
                {
                    "name": "Primary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/insite-kit/src/lib/component/header/header.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/insite-kit/src/lib/component/header/header.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<HeaderComponent>",
                    "defaultValue": "(args: HeaderComponent) => ({\r\n  props: args,\r\n})"
                }
            ],
            "projects/insite-kit/src/lib/test/test-setup.ts": [
                {
                    "name": "setupTests",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/insite-kit/src/lib/test/test-setup.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "(initTest, cleanupStyles = true) => {\r\n  beforeEach(() => {\r\n    initTest();\r\n  });\r\n\r\n  // Cleanup styles injected by ng-select and other various style modifications after each TestBed suite is complete.\r\n  if (cleanupStyles) {\r\n    afterAll(() => {\r\n      window.document\r\n        .querySelectorAll('style')\r\n        .forEach((style: HTMLStyleElement) => style.remove());\r\n    });\r\n  }\r\n}",
                    "rawdescription": "Wrapper function to initialize a TestBed configuration with global before/after methods defined.",
                    "description": "<p>Wrapper function to initialize a TestBed configuration with global before/after methods defined.</p>\n"
                }
            ],
            "projects/insite-kit/src/lib/service/subscription/stomp.config.ts": [
                {
                    "name": "STOMP_SOCKET_CONFIG",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/insite-kit/src/lib/service/subscription/stomp.config.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "RxStompConfig",
                    "defaultValue": "{\r\n  brokerURL: '',\r\n\r\n  // How often to heartbeat?\r\n  // Interval in milliseconds, set to 0 to disable\r\n  heartbeatIncoming: 20000, // Typical value 0 - disabled\r\n  heartbeatOutgoing: 20000, // Typical value 20000 - every 20 seconds\r\n\r\n  // Wait in milliseconds before attempting auto reconnect\r\n  // Set to 0 to disable\r\n  // Typical value 500 (500 milli seconds)\r\n  reconnectDelay: 5000,\r\n}"
                }
            ],
            "projects/insite-kit/src/lib/service/auth/jwt.service.ts": [
                {
                    "name": "TOKEN_NAME",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/insite-kit/src/lib/service/auth/jwt.service.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "defaultValue": "'token'"
                }
            ]
        },
        "groupedFunctions": {
            "projects/insite-kit/src/lib/insite-kit.module.ts": [
                {
                    "name": "tokenGetter",
                    "file": "projects/insite-kit/src/lib/insite-kit.module.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "args": []
                }
            ]
        },
        "groupedEnumerations": {
            "projects/insite-kit/src/lib/model/common.model.ts": [
                {
                    "name": "Access",
                    "childs": [
                        {
                            "name": "CREATE",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "c"
                        },
                        {
                            "name": "READ",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "r"
                        },
                        {
                            "name": "UPDATE",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "u"
                        },
                        {
                            "name": "DELETE",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "d"
                        }
                    ],
                    "ctype": "miscellaneous",
                    "subtype": "enum",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "file": "projects/insite-kit/src/lib/model/common.model.ts"
                },
                {
                    "name": "Feature",
                    "childs": [
                        {
                            "name": "USER_DETAIL",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "detail"
                        },
                        {
                            "name": "PROFILE",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "profile"
                        },
                        {
                            "name": "NOTIFICATION",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "notification"
                        }
                    ],
                    "ctype": "miscellaneous",
                    "subtype": "enum",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "file": "projects/insite-kit/src/lib/model/common.model.ts"
                },
                {
                    "name": "WebRole",
                    "childs": [
                        {
                            "name": "USER",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": 1
                        },
                        {
                            "name": "SYSTEM_USER",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": 2
                        },
                        {
                            "name": "DEVELOPER",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": 3
                        },
                        {
                            "name": "ADMIN",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": 4
                        }
                    ],
                    "ctype": "miscellaneous",
                    "subtype": "enum",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "file": "projects/insite-kit/src/lib/model/common.model.ts"
                }
            ],
            "projects/insite-kit/src/lib/model/notification.model.ts": [
                {
                    "name": "NotificationAction",
                    "childs": [
                        {
                            "name": "CREATE",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "C"
                        },
                        {
                            "name": "READ",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "R"
                        },
                        {
                            "name": "UPDATE",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "U"
                        },
                        {
                            "name": "DELETE",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "D"
                        }
                    ],
                    "ctype": "miscellaneous",
                    "subtype": "enum",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "file": "projects/insite-kit/src/lib/model/notification.model.ts"
                },
                {
                    "name": "NotificationType",
                    "childs": [
                        {
                            "name": "USER",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "USER"
                        },
                        {
                            "name": "SYSTEM_UPDATE",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "SYSTEM_UPDATE"
                        }
                    ],
                    "ctype": "miscellaneous",
                    "subtype": "enum",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "file": "projects/insite-kit/src/lib/model/notification.model.ts"
                }
            ]
        },
        "groupedTypeAliases": {
            "projects/insite-kit/src/lib/model/grid.model.ts": [
                {
                    "name": "GridDataObservable",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "Observable<any[]>",
                    "file": "projects/insite-kit/src/lib/model/grid.model.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 177
                }
            ]
        }
    },
    "routes": [],
    "coverage": {
        "count": 12,
        "status": "low",
        "files": [
            {
                "filePath": "projects/insite-kit/src/lib/component/banner/banner.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "BannerComponent",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "projects/insite-kit/src/lib/component/banner/banner.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "BannerContent",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/insite-kit/src/lib/component/banner/banner.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/insite-kit/src/lib/component/card/card-header/card-header.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "CardHeaderComponent",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "projects/insite-kit/src/lib/component/card/card-info/card-info.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "CardInfoComponent",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "projects/insite-kit/src/lib/component/card/card-info/card-info.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "CardInfo",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/insite-kit/src/lib/component/card/card-info/card-info.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/insite-kit/src/lib/component/card/card.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "CardComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "projects/insite-kit/src/lib/component/card/card.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "CardContent",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/insite-kit/src/lib/component/card/card.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/insite-kit/src/lib/component/checkbox/checkbox.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "CheckboxComponent",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "projects/insite-kit/src/lib/component/footer/footer.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "FooterComponent",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/insite-kit/src/lib/component/footer/modals/contact-admin-modal/contact-admin-modal.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ContactAdminModalComponent",
                "coveragePercent": 0,
                "coverageCount": "0/8",
                "status": "low"
            },
            {
                "filePath": "projects/insite-kit/src/lib/component/footer/modals/privacy-policy-modal/privacy-policy-modal.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "PrivacyPolicyModalComponent",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "projects/insite-kit/src/lib/component/footer/modals/project-modal/project-modal.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ProjectModalComponent",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "projects/insite-kit/src/lib/component/grid/grid-column/grid-column.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "GridColumnComponent",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "projects/insite-kit/src/lib/component/grid/grid-pager/grid-pager.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "GridPagerComponent",
                "coveragePercent": 0,
                "coverageCount": "0/17",
                "status": "low"
            },
            {
                "filePath": "projects/insite-kit/src/lib/component/grid/grid-search/grid-search.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "GridSearchComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "projects/insite-kit/src/lib/component/grid/grid-show-all/grid-show-all.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "GridShowAllComponent",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "projects/insite-kit/src/lib/component/grid/grid.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "GridComponent",
                "coveragePercent": 0,
                "coverageCount": "0/33",
                "status": "low"
            },
            {
                "filePath": "projects/insite-kit/src/lib/component/header/header-back/header-back.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "HeaderBackComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "projects/insite-kit/src/lib/component/header/header-back/header-back.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Basic",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/insite-kit/src/lib/component/header/header-back/header-back.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/insite-kit/src/lib/component/header/header.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "HeaderComponent",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "projects/insite-kit/src/lib/component/header/header.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Primary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/insite-kit/src/lib/component/header/header.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/insite-kit/src/lib/component/icon/icon.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "IconComponent",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "projects/insite-kit/src/lib/component/insite-page/insite-page.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "InsitePageComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "projects/insite-kit/src/lib/component/loading/loading.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "LoadingComponent",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "projects/insite-kit/src/lib/component/modal/modal-action-bar/modal-action-bar.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ModalActionBarComponent",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/insite-kit/src/lib/component/modal/modal-body/modal-body.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ModalBodyComponent",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/insite-kit/src/lib/component/modal/modal-header/modal-header.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ModalHeaderComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "projects/insite-kit/src/lib/component/modal/modal.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ModalComponent",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "projects/insite-kit/src/lib/component/navbar/base-navbar/base-navbar.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "BaseNavbarComponent",
                "coveragePercent": 0,
                "coverageCount": "0/14",
                "status": "low"
            },
            {
                "filePath": "projects/insite-kit/src/lib/component/navbar/navbar/navbar.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "NavbarComponent",
                "coveragePercent": 0,
                "coverageCount": "0/25",
                "status": "low"
            },
            {
                "filePath": "projects/insite-kit/src/lib/component/notification-message/notification-message.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "NotificationMessageComponent",
                "coveragePercent": 28,
                "coverageCount": "2/7",
                "status": "medium"
            },
            {
                "filePath": "projects/insite-kit/src/lib/component/sidebar/sidebar.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "SidebarComponent",
                "coveragePercent": 0,
                "coverageCount": "0/14",
                "status": "low"
            },
            {
                "filePath": "projects/insite-kit/src/lib/insite-kit.module.ts",
                "type": "function",
                "linktype": "miscellaneous",
                "linksubtype": "function",
                "name": "tokenGetter",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/insite-kit/src/lib/model/auth-token.model.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "AuthToken",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "projects/insite-kit/src/lib/model/grid.model.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "GridColumn",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "projects/insite-kit/src/lib/model/notification.model.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "Notification",
                "coveragePercent": 0,
                "coverageCount": "0/7",
                "status": "low"
            },
            {
                "filePath": "projects/insite-kit/src/lib/model/notification.model.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "NotificationBody",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "projects/insite-kit/src/lib/model/password-update.model.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "PasswordUpdate",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "projects/insite-kit/src/lib/model/user.model.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "User",
                "coveragePercent": 0,
                "coverageCount": "0/9",
                "status": "low"
            },
            {
                "filePath": "projects/insite-kit/src/lib/model/web-notification.model.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "WebNotification",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "projects/insite-kit/src/lib/service/auth/auth.guard.ts",
                "type": "guard",
                "linktype": "guard",
                "name": "AuthGuard",
                "coveragePercent": 33,
                "coverageCount": "1/3",
                "status": "medium"
            },
            {
                "filePath": "projects/insite-kit/src/lib/service/auth/auth.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "AuthService",
                "coveragePercent": 50,
                "coverageCount": "2/4",
                "status": "medium"
            },
            {
                "filePath": "projects/insite-kit/src/lib/service/auth/jwt.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "JwtService",
                "coveragePercent": 70,
                "coverageCount": "7/10",
                "status": "good"
            },
            {
                "filePath": "projects/insite-kit/src/lib/service/auth/jwt.service.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "TOKEN_NAME",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/insite-kit/src/lib/service/common/common.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "CommonService",
                "coveragePercent": 75,
                "coverageCount": "3/4",
                "status": "good"
            },
            {
                "filePath": "projects/insite-kit/src/lib/service/interceptor/http-interceptor.service.ts",
                "type": "interceptor",
                "linktype": "interceptor",
                "name": "BasicHttpInterceptorService",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "projects/insite-kit/src/lib/service/pipe/format-user-name.pipe.ts",
                "type": "pipe",
                "linktype": "pipe",
                "name": "UsernamePipe",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/insite-kit/src/lib/service/pipe/notification-message.pipe.ts",
                "type": "pipe",
                "linktype": "pipe",
                "name": "NotificationMessagePipe",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/insite-kit/src/lib/service/request/request.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "RequestService",
                "coveragePercent": 85,
                "coverageCount": "6/7",
                "status": "very-good"
            },
            {
                "filePath": "projects/insite-kit/src/lib/service/subscription/notification/notification.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "NotificationService",
                "coveragePercent": 60,
                "coverageCount": "6/10",
                "status": "good"
            },
            {
                "filePath": "projects/insite-kit/src/lib/service/subscription/notification/popup.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "PopupService",
                "coveragePercent": 75,
                "coverageCount": "3/4",
                "status": "good"
            },
            {
                "filePath": "projects/insite-kit/src/lib/service/subscription/stomp.config.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "STOMP_SOCKET_CONFIG",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/insite-kit/src/lib/service/subscription/subscription.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "SubscriptionService",
                "coveragePercent": 60,
                "coverageCount": "3/5",
                "status": "good"
            },
            {
                "filePath": "projects/insite-kit/src/lib/service/url-service/url.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "UrlService",
                "coveragePercent": 75,
                "coverageCount": "3/4",
                "status": "good"
            },
            {
                "filePath": "projects/insite-kit/src/lib/test/abstract-test-bed.ts",
                "type": "class",
                "linktype": "classe",
                "name": "AbstractTestBed",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "projects/insite-kit/src/lib/test/insite-test-bed.ts",
                "type": "class",
                "linktype": "classe",
                "name": "InsiteTestBed",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "projects/insite-kit/src/lib/test/lib-test-env.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "environment",
                "coveragePercent": 100,
                "coverageCount": "1/1",
                "status": "very-good"
            },
            {
                "filePath": "projects/insite-kit/src/lib/test/test-data.ts",
                "type": "class",
                "linktype": "classe",
                "name": "InsiteDataObject",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "projects/insite-kit/src/lib/test/test-data.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "InisteTestData",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/insite-kit/src/lib/test/test-setup.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "setupTests",
                "coveragePercent": 100,
                "coverageCount": "1/1",
                "status": "very-good"
            },
            {
                "filePath": "projects/insite-kit/src/test.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "context",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/insite-kit/src/test.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "require",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            }
        ]
    }
}